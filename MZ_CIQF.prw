#include "rwmake.ch"
#include "topconn.ch"
#include "PROTHEUS.CH"

Static Function MenuDef()

Local aRotina := {{OemToAnsi("Pesquisa"), "AxPesqui", 0, 1,,.F.},; //"Pesquisa"
					{OemToAnsi("Visualiza"), "AxVisual", 0, 2},; //"Visualiza"
					{OemToAnsi("Inclui"   ), "U_Q230MIQF", 0, 3},; //"Inclui"   
					{OemToAnsi("Altera"), "U_Q230MIQF", 0, 4},; //"Altera"   
					{OemToAnsi("Exclui"), "U_Q230DIQF", 0, 5}}  //"Exclui"

Return aRotina

User Function MZ_CIQF()
Private cCadastro := OemtoAnsi("Indice de Qualidade")  //"Indice de Qualidade"    
Private lNFQEL   := .F.//IIF(QEL->(FieldPos('QEL_NTFISC')) > 0,.t.,.f.)

Private aRotina := MenuDef()
mBrowse(06,01,22,75,"QEV")

Return(NIL)

User Function Q230MIQF(cAlias,nReg,nOpc)       
Local oDlg 
Local bOk        := {||nOpcA := 1,oDlg:End()}
Local bCancel    := {||nOpcA := 0,oDlg:End()}
Local aAreaAnt   := GetArea()
Local lFatIQP
Local nOpcA      := 0
Local cDiaAnt    := ''
Local oAno 
Local oMes 
Local oFornece 
Local oData
Local lQEA231    := ExistBlock("QIEA231")             
Local nSavRot    := aRotina[3,4]
Local lDate      := .F.
Local cMesPos    := ''

Private aButtons := {}
Private c230Mes  := StrZero(Month(MsDate()),2)
Private c230Ano  := Str(Year(MsDate()),4)
Private c230For  := CriaVar("QEV_FORNEC")
Private c230Dia  := StrZero(Val(GetMv("MV_QDIAMIQ")),2) //Dia de Fechamento no Mes para Calculo dos Indices
Private lDispMsg := .T.

If nOpc <> 3
	dbSelectArea(cAlias)
	c230Ano := QEV_ANO
	c230Mes := QEV_MES
	c230For := QEV_FORNEC
Else
	//Define o tipo para que a Inclusao nao retorne 
	aRotina[3,4] := 6
	Inclui       := .F.	
EndIf

cDiaAnt := c230Dia  //Armazena o Dia Anterior, para Calculo dos Indices            

//Verifica se todos os fatores do IQP estao cadastrados
lFatIQP := If(GetMV("MV_QFATIQP",.F.,.T.),QA_FatIQP(),.T.)       

If nOpc == 3 //Inclusao
	Aadd(aButtons,{"S4SB014N",{||U_Q230Dife(@oData,@lDate)},"Altera o dia do Fechamento...","Alt.Dia"}) //"Altera o dia do Fechamento..."###"Alt.Dia"
EndIf
                                  
DEFINE MSDIALOG oDlg TITLE OemToAnsi("Geração do Indice Qualidade") FROM 009,000 TO 030,078 OF GetWndDefault() // "Gera?o do Indice Qualidade"
@ 045,004 Say TitSX3("QEV_ANO")[1]    Size 033,007 Of oDlg Pixel
@ 059,004 Say TitSX3("QEV_MES")[1]    Size 053,007 Of oDlg Pixel
@ 074,004 Say TitSX3("QEV_FORNEC")[1] Size 035,007 Of oDlg Pixel
@ 088,004 Say OemToAnsi("Dia Fechamento")      Size 050,007 Of oDlg Pixel //"Dia Fechamento"

@ 043,048 MsGet oAno Var c230Ano Picture PesqPict("QEV","QEV_ANO") F3 "QEV";
	Valid U_Q230VlAn(nOpc) Of oDlg Pixel Size 036,010
oAno:cSX1Hlp := "QEV_ANO"

@ 057,048 MsGet oMes Var c230Mes Picture PesqPict("QEV","QEV_MES");
	Valid Val(c230Mes) >= 1 .And. Val(c230Mes) <= 12 Of oDlg Pixel Size 036,010
oMes:cSX1Hlp := "QEV_MES"

@ 085,048 MsGet oData Var c230Dia When lDate .And. U_Q230WhDi();
	Valid Val(c230Dia) >= 1 .And. Val(c230Dia) <= 31 .And. U_Q230Dife(@oData,@lDate);
		Of oDlg Pixel Size 036,010
oData:cSX1Hlp := "QEV_MES"

@ 071,048 MsGet oFornece Var c230For Picture PesqPict("QEV","QEV_FORNEC") F3 "SA2";
	Valid If(!Empty(c230For),ExistCpo("SA5",c230For,1),.T.);
		Of oDlg Pixel Size 036,010
oFornece:cSX1Hlp := "QEV_FORNEC"
	
@ 073,094 Say Posicione("SA2",1,xFilial('SA2')+c230For,"A2_NOME") Of oDlg Pixel Size 120,007
   
If (nOpc == 3)             
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,bOk,bCancel,,aButtons) VALID .T.
Else
	ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,bOk,bCancel,,) 
EndIf	  

//????????????????????????????????
//?Realiza a atualizacao dos dados referentes ao Resultados	 ?
//????????????????????????????????	
If nOpcA == 1 .And. lFatIQP

	//????????????????????????????????
	//?Se o Dia de Fechamento Mensal foi alterado, exclui todos os  ?
	//?Indices Mensais,											 ?
	//????????????????????????????????
	If cDiaAnt <> c230Dia
	
		If !lDispMsg //Se a mensagem ja foi exibida ao usuario                      
		
			//Exclui o Historico dos Indices
			MsgRun("Excluindo o Historico dos Indices Mensais...","Aguarde...",{||U_Q230DIQF('QEV',QEV->(Recno()),nOpc,,.T.)}) //"Excluindo o Historico dos Indices Mensais..." ### "Aguarde..."
		
			//Grava o novo dia no MV_QDIAIQ
			WriteMv("MV_QDIAMIQ",c230Dia,"C",2)                                      
		EndIf
	Else
		//Exclui o Historico dos Indices gerados no Mes+Ano
		MsgRun("Excluindo os Indices no Mes/Ano...","Aguarde...",{|| U_Q230DIQF('QEV',QEV->(Recno()),nOpc,,.T.,c230Ano,c230Mes,c230For)}) //"Excluindo os Indices no Mes/Ano..." ### "Aguarde..."
		
	EndIf

	If lQEA231                
		//Compatibiza as variaveis utilizadas no RDMAKE QIEA231.PRW 	
		Private cIE230For := c230For
		Private cIE230Dia := c230Dia
		Private cIE230Mes := c230Mes
		Private cIE230Ano := c230Ano
	
		//????????????????????????????????
		//?Executa o calculo do IQF via RDMAKE							 ?
		//????????????????????????????????
		ProcQDO({||ExecBlock("QIEA231",.F.,.F.)},,,.T.,)
	Else		
		//????????????????????????????????
		//?Executa o calculo do IQF pela Rotina padrao					 ?
		//????????????????????????????????  
		Processa({|| U_Q230AtuInd(c230For,c230Dia,c230Mes,c230Ano)},;
			"Gerando o IQF...","Gravando Registros...",.F.) //"Gerando o IQF..."###"Gravando Registros..."		
	EndIf
	
	//????????????????????????????????
	//?Verifica se j? havia gerado para o mes/ano posterior 		 ?
	//????????????????????????????????

	// Se gerou indice para o mes/ano
	QEV->(dbSetOrder(1))
	If QEV->(MsSeek(xFilial("QEV")+c230Ano+c230Mes))
		cMesPos := StrZero(Val(c230Mes)+1,2)
		cAnoPos := c230Ano
		If cMesPos == "13"
			cMesPos := "01"
			cAnoPos := Str(Val(c230Ano)+1,4)
		EndIf
		If QEV->(MsSeek(xFilial("QEV")+cAnoPos+cMesPos))
			MsgInfo(OemToAnsi("Dever? ser gerado novamente o Indice Qualidade do m?/ano ")+cMesPos+"/"+cAnoPos,OemToAnsi("Aten?o"))   // "Dever? ser gerado novamente o Indice Qualidade do m?s/ano "###"Aten??o"
		EndIf
	EndIf
EndIf
                
//Restaura o valor original do aRotina
aRotina[3,4] := nSavRot

RestArea(aAreaAnt)

Return(NIL)

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?Q230DiFe ?Autor ?Paulo Emidio de Barros?Data ?24/02/03 ??
???????????????????????????????????????
??escri??o ?Habilita a digitacao do Dia do Fechamento      			  ??
???????????????????????????????????????
??intaxe	 ?Q230DiFe(oData,lDate)    								  ??
???????????????????????????????????????
??arametros?EXPO1 = Objeto do campo Data								  ??
??		 ?EXPL1 = Indica a Edicao do Campo Data					  ??
???????????????????????????????????????
??etorno   ?NIL														  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
User Function Q230DiFe(oData,lDate)
If !lDate
	lDate := .T.
	oData:Enable()
	oData:SetFocus(.T.)
Else
	lDate := .F.
	oData:Disable()
EndIf
Return(NIL)

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?Q230VlAn ?Autor ?Paulo Emidio de Barros?Data ?24/02/03 ??
???????????????????????????????????????
??escri??o ?Verifica se Existe Indices para Exclusao dos Indices       ??
???????????????????????????????????????
??intaxe	 ?Q230VlAn()			    								  ??
???????????????????????????????????????
??arametros?															  ??
???????????????????????????????????????
??etorno   ?.T.														  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
User Function Q230VlAn(nOpc)
Local aAreaAnt := GetArea()
Local cAnoDel  := Str(Val(c230Ano)-5,4) //Mantem 5 anos para Historico 
Local lDeleta  := .F.

//Verifica se existe Historico a ser excluido
QEV->(dbSetOrder(1))
If !QEV->(MsSeek(xFilial("QEV")+c230Ano))
	If QEV->(MsSeek(xFilial("QEV")+cAnoDel))
		If (lDeleta := MsgYesNo(OemToAnsi("Poder? ser exclu?os os Indices Qualidade de ")+cAnoDel+" ?",OemToAnsi("Exclus? do Hist?ico"))) //"Poder?o ser exclu?os os Indices Qualidade de " ### "Exclus?o do Hist?ico" 
			MsgRun("Excluindo o Historico dos Indices Mensais...","Aguarde...",{|| U_Q230DIQF('QEV',QEV->(Recno()),nOpc,,.T.,cAnoDel)}) //"Excluindo o Historico dos Indices Mensais..." ### "Aguarde..."
		EndIf
	EndIf
EndIf 
               
RestArea(aAreaAnt)

Return(.T.)

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?Q230WHDI ?Autor ?Paulo Emidio de Barros?Data ?24/02/03 ??
???????????????????????????????????????
??escri??o ?Define a clausula WHEN para o Dia do Fechamento no Mes     ??
???????????????????????????????????????
??intaxe	 ?Q230WhDI()			    								  ??
???????????????????????????????????????
??arametros?															  ??
???????????????????????????????????????
??etorno   ?.T. ou .F.												  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
User Function Q230WhDi()
Local lRetorno := .T.
Local cSeek    := ''

//????????????????????????????????
//?Verifica se existe Indice Qualidade gerado para as filiais   ?
//????????????????????????????????  
If !Empty(c230For) 
	cSeek := (c230Ano+c230Mes+c230For)
Else                            
	cSeek := (c230Ano+c230Mes)
EndIf

QEV->(dbSetOrder(1))
If QEV->(MsSeek(xFilial("QEV")+cSeek,.T.))    
	//Exibe a Mensagem ao usuario somente uma vez
	If lDispMsg 
		MsgAlert(OemToAnsi("J?foram gerados Indices de Qualidade. Se o dia de fechamento do m? for alterado, os ?dices ser? cancelados."),OemToAnsi("Aten?o")) //"J? foram gerados Indices de Qualidade. Se o dia de fechamento do m?s for alterado, os ?dices ser?o cancelados."###"Aten??o","ATENCAO"
		lDispMsg := .F.
	EndIf
EndIf

Return(lRetorno) 

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?230AtuInd?Autor ?Paulo Emidio de Barros?Data ?24/02/03 ??
???????????????????????????????????????
??escri??o ?Realiza o Calculo do IQF									  ??
???????????????????????????????????????
??intaxe	 ?Q230AtuInd(cFornece,cDia,cMes,cAno)						  ??
???????????????????????????????????????
??arametros?EXPC1 = Fornecedor										  ??
??		 ?EXPC2 = Dia para Geracao dos Indices						  ??
??		 ?EXPC3 = Mes para Geracao dos Indices						  ??
??         ?EXPC4 = Ano para Geracao dos Indices						  ??
???????????????????????????????????????
??etorno   ?NIL														  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
User Function Q230AtuInd(cFornece,cDia,cMes,cAno)
//??????????????????????????????????????
//?                  Formulas para o Calculo dos Indices                   ?
//??????????????????????????????????????
//?IQP por Tabela Completa:                                                ?
//?  IA = ((Fator A*Qtd. A + Fator B*Qtd. B + ...)/(Qtd. A+Qtd. B)) * 100  ?
//?  Se IQI por Tabela:                                                    ?
//?    IQP = (100 - K) - Total Demerito   (K ?obtido em funcao do IA)     ?
//?  Se IQI por Soma:                                                      ?
//?    IQP = IA                                                            ?
//?IQP por Tabela Simplificada:                                            ?
//?  IQP = 101-((Qt.A+(Fat. B*100)*Qt.B+(Fat. C*100)*Qt.C)/(Qt.A+Qt.B+...))?
//?                                                                        ?
//?IQI por Tabela:                                                         ?
//?  IQI = IQP * FC   (FC ?obtido em funcao do IQS)                       ?
//?IQI por Soma:                                                           ?
//?  IQI = 0.80 * IQP + 0.20 * IQS                                         ?
//?                                                                        ?
//?IES (IPO):                                                              ?
//?  IPO = (1- (Somat.(Tam.Lote*Dias Atraso)/(MV_QDIAATR*Qtd.Total))) * 100?
//?                                                                        ?
//?ICT = IPR = 0                                                           ?
//?                                                                        ?
//?IQF:                                                                    ?
//?  IQF = Fat.IQI * IQI + Fat.IPR * IPR + Fat.IES * IES + Fat.ICT * ICT   ?
//?                                                                        ?
//?Calculo do Acumulado:                                                   ?
//?Flexivel:                                                               ?
//?  Pelo menos 1 Entrada nos n meses                       -> Calcula     ?
//?Rigido:                                                                 ?
//?  Menos de n/2 meses com Entradas                        -> Nao Calcula ?
//?  De n/2 a n-1 meses c/ Entrada: menos de 6 Entradas     -> Nao Calcula ?
//?                             6 ou mais Entradas          -> Calcula     ?
//?  n meses com Entradas                                   -> Calcula     ?
//??????????????????????????????????????
Local aAreaAnt    := GetArea()
Local lContinua   := .T.
Local nFatIQI     := 0
Local nFatIPR     := 0
Local nFatIES     := 0
Local aFatIQP     := {}
Local aFatInf     := {}
Local cFatApr     := ""
Local cFatRep     := ""
Local cFatLU      := ""
Local lQtdRej   
Local nDiaAtr     := 0
Local lQtdRep 
Local cLabor      := CriaVar("QEL_LABOR")
Local cQuery      := ''
Local lQuery      := .F.
Local cAliasQEK   := ''
Local cIndexQEK   := ''
Local nIndexQEK   := 0 
Local cAliasSA5   := ''
Local cAliasQEV   := ''
Local cCondicao   := '' 
Local cIndexSA5   := ''
Local nIndexSA5   := 0
Local cChave      := ''
Local cFornAtu    := ''
Local cProdAtu    := ''
Local cChvMed     := ''
Local aDados      := {}
Local nMesAcu     := 0
Local dInicio     := Ctod("")
Local dFinal      := Ctod("")
Local cLaudo      := ''
Local aAnoMes     := {}
Local cAnoIni     := ""
Local cAnoFim     := ""
Local cMesIni     := ""
Local cMesFim     := ""
Local nTotEnt	  := 0 
Local nEntDem	  := 0 
Local nQtdEnt	  := 0 
Local nNidi	      := 0 
Local nTotDem	  := 0 
Local nQtdRej	  := 0 
Local cQtdRej     := '' 
Local nLotIns	  := 0 
Local nLotSkp	  := 0 
Local nQtdIns	  := 0 
Local nQtdSkp	  := 0 
Local nSoma       := 0
Local nAux        := 0
Local nIA         := 0
Local nIQP 	      := 0
Local nIQS        := 0
Local nFC 		  := 0
Local nIQI 		  := 0
Local nIPR 		  := 0
Local nIPO 		  := 0
Local nITR 		  := 0
Local nIES 		  := 0
Local nIQF 		  := 0
Local nRecnoQEV   := 0
Local aFatAcum    := {}
Local aLotEnt     := {}
Local aLotDem     := {}
Local aIQD  	  := {}
Local aIPO 		  := {}
Local nCtMes 	  := 0
Local lAcumula    := .T.
Local nIQPa  	  := 0
Local nIQIa   	  := 0
Local nIPOa   	  := 0
Local nIQFa 	  := 0
Local nI          := 0
Local nK  	      := 0
Local nX          := 0
Local nY 		  := 0
Local nZ		  := 0
Local lMensal     := .F. //Indica se existe dados para Geracao dos Indices Mensais
Local lAcumulado  := .F. //Indica se existe dados para Geracao dos Indices Acumulados
Local cSeek       := '' 
Local cChvQER     := ""
Local cSeekQER    := ""
Local nSetQER     := 0
		
//Indica se as Entradas Certificadas em Regime de Skip-Lote serao utilizadas no Calculo dos Indices
Local lNaoCer     :=  GetMV("MV_QNAOCER",.T.,.F.)
Local aRetorno    := {}
#IFDEF TOP
Local aStruQEK    := {}
Local aStruQEV    := {}
Local aStruSA5    := {}
Local cAliasQER   := ''
Local nPosCpo     := 0
#ENDIF                        
//????????????????????????????????
//?Verifica se as tabelas do IA e do IQS estao cadastradas      ?
//????????????????????????????????  
QEJ->(dbSetOrder(1))
If QEJ->(!MsSeek(xFilial("QEJ")+"1"))
	MsgAlert("Favor cadastrar a Tabela do Indice Aceitacao (IA)","Atencao") //"Favor cadastrar a Tabela do Indice Aceitacao (IA)"###"Atencao"
	Return(.F.)
EndIf           

If QEJ->(!MsSeek(xFilial("QEJ")+"2"))
	MsgAlert("Favor cadastrar a Tabela do Indice Qualidade Sistema (IQS)","Atencao") //"Favor cadastrar a Tabela do Indice Qualidade Sistema (IQS)"###"Atencao"
	Return(.F.)
EndIf

//????????????????????????????????
//?Verifica se cadastrou os Indices do IQF                      ?
//????????????????????????????????  
QF1->(dbSetOrder(1))
If QF1->(!MsSeek(xFilial("QF1")))
	MsgAlert("Favor cadastrar os Indices do IQF","Atencao") //"Favor cadastrar os Indices do IQF"###"Atencao"
	Return(.F.)
EndIf
                            
//????????????????????????????????
//?Obtem o fator do IQI										 ?
//????????????????????????????????  
If !(lContinua := U_Q230IdeIQF("IQI",.T.,@nFatIQI))
	Return(.F.)
EndIf	

//????????????????????????????????
//?Obtem o fator do IPR										 ?
//????????????????????????????????  
If !(lContinua := U_Q230IdeIQF("IPR",.F.,@nFatIPR))
	Return(.F.)
EndIf	

//????????????????????????????????
//?Obtem o fator do IES									     ?
//????????????????????????????????  
If !(lContinua := U_Q230IdeIQF("IES",.T.,@nFatIES))
	Return(.F.)
EndIf	

//????????????????????????????????
//?Definicao dos Fatores do IQP (padrao)						 ?
//????????????????????????????????  
aFatIQP := U_Q230DefIQP(@cFatApr,@cFatRep,@cFatLU)

If Len(aFatIQP) == 0
	//Incluir Help
	Return(NIL)
Else
	aFatIQP := aSort(aFatIQP,,,{|x,y|x[3]+x[1]<y[3]+y[1]}) //Ordena por Categoria+Laudo
EndIf	
                          
//????????????????????????????????
//?Define o periodo a ser considerado para a geracao IQF mensal ?
//????????????????????????????????  
cMes     := StrZero(Val(cMes),2)                                  
aRetorno := Q230RetData(cDia,cMes,cAno)                              
dInicio  := aRetorno[1]
dFinal   := aRetorno[2]                                  

//????????????????????????????????
//?Define o periodo a ser considerado para a geracao IQF Acumu- ?
//?lado,retorna n meses a partir do Mes/Ano selecionado.		 ?
//????????????????????????????????  

//Obtem o numero de meses para o calculo do acumulado
nMesAcu := GetMv("MV_QMESACU")
aAnoMes := {}
cAnoIni := cAno
cAnoFim := cAno
cMesIni := cMes
cMesFim := cMes

For nI := 1 to nMesAcu
	Aadd(aAnoMes,{cAnoIni,cMesIni})
	cMesIni := StrZero(Val(cMesIni)-1,2)
	If cMesIni == '00'
		cAnoIni := StrZero(Val(cAnoIni)-1,4)
		cMesIni := '12'
	EndIf
Next nI

aAnoMes := aSort(aAnoMes,,,{|x,y|x[1]+x[2]<y[1]+y[2]}) //Ano+Mes
cMesIni := aAnoMes[1,2]
cAnoIni := aAnoMes[1,1]
cMesFim := aAnoMes[Len(aAnoMes),2]
cAnoFim := aAnoMes[Len(aAnoMes),1]

//????????????????????????????????
//?Indica se acumula a qtde. rejeitada no Laudo Reprovado		 ?
//????????????????????????????????  
lQtdRej := If(GetMv("MV_QQTDREJ")=="S",.T.,.F.)

//????????????????????????????????
//?Indica o numero maximo de dias em atraso					 ?
//????????????????????????????????  
nDiaAtr := GetMv("MV_QDIAIPO")

//????????????????????????????????
//?Indica se a quantidade rejeitada que foi transferida sera con?
//?siderada para demerito no Calculo do Indice dos Fornecedores ?
//????????????????????????????????  
lQtdRep  := If(GetMv("MV_QTRFREP")=="S",.T.,.F.)
       
//????????????????????????????????
//?Filtra as Entradas no Periodo para a Geracao dos Indices	 ?
//????????????????????????????????  
dbSelectArea('QEK')     
dbSetorder(1) //Antes era 8, testar
#IFDEF TOP         
 If TCSrvType() <> "AS/400"         
     
 	 //Filtra as Entradas no Periodo
	 cAliasQEK := "QRYQEK"           
	 aStruQEK  := QEK->(dbStruct())
	 lQuery    := .T.
	 cQuery    := "SELECT "
	 cQuery    += "QEK.QEK_FILIAL QEK_FILIAL, "
	 cQuery    += "QEK.QEK_FORNEC QEK_FORNEC, "
	 cQuery    += "QEK.QEK_LOJFOR QEK_LOJFOR, "
	 cQuery    += "QEK.QEK_PRODUT QEK_PRODUT, "
	 cQuery    += "QEK.QEK_REVI   QEK_REVI  , "
	 cQuery    += "QEK.QEK_LOTE   QEK_LOTE  , "
	 cQuery    += "QEK.QEK_TAMLOT QEK_TAMLOT, "
	 cQuery    += "QEK.QEK_TIPONF QEK_TIPONF, "
	 cQuery    += "QEK.QEK_TIPDOC QEK_TIPDOC, "
	 cQuery    += "QEK.QEK_DTENTR QEK_DTENTR, "
	 cQuery    += "QEK.QEK_VERIFI QEK_VERIFI, "
	 cQuery    += "QEK.QEK_DIASAT QEK_DIASAT, "
	 cQuery    += "QEK.QEK_SITENT QEK_SITENT, "
	 cQuery    += "QEK.QEK_NTFISC QEK_NTFISC, "
	 cQuery    += "QEK.QEK_SERINF QEK_SERINF, "
	 cQuery    += "QEK.QEK_ITEMNF QEK_ITEMNF, "
	 cQuery    += "QEK.QEK_TIPONF QEK_TIPONF, "

	 cQuery    += "QEL.QEL_FILIAL QEL_FILIAL, "
	 cQuery    += "QEL.QEL_FORNEC QEL_FORNEC, "
	 cQuery    += "QEL.QEL_LOJFOR QEL_LOJFOR, "
	 cQuery    += "QEL.QEL_PRODUT QEL_PRODUT, "
	 cQuery    += "QEL.QEL_LOTE   QEL_LOTE  , "
	 cQuery    += "QEL.QEL_DTENTR QEL_DTENTR, "
	 cQuery    += "QEL.QEL_LABOR  QEL_LABOR , "
	 cQuery    += "QEL.QEL_LAUDO  QEL_LAUDO , "
	 cQuery    += "QEL.QEL_DTLAUD QEL_DTLAUD, "
	 cQuery    += "QEL.QEL_QTREJ  QEL_QTREJ , "
	 If lNFQEL
	 	cQuery    += "QEL.QEL_NTFISC  QEL_NTFISC , "
	 	cQuery    += "QEL.QEL_SERINF  QEL_SERINF , "
	 	cQuery    += "QEL.QEL_ITEMNF  QEL_ITEMNFJ , "
	 	cQuery    += "QEL.QEL_TIPONF  QEL_TIPONF , "
	 EndIF
	 
	 cQuery    += "SA5.A5_FILIAL  A5_FILIAL , "
	 cQuery    += "SA5.A5_FORNECE A5_FORNECE, "
	 cQuery    += "SA5.A5_LOJA    A5_LOJA   , "
	 cQuery    += "SA5.A5_PRODUTO A5_PRODUTO, "
	 cQuery    += "SA5.A5_FABREV  A5_FABREV "
	 
	 cQuery    += "FROM "+RetSqlName("QEK")+" QEK, "
	 cQuery    += RetSqlName("QEL")+" QEL, "
     cQuery    += RetSqlName("SA5")+" SA5 "
	 cQuery    += "WHERE QEK.QEK_FILIAL = '"+xFilial("QEK")+"' AND "
	 cQuery    += "QEK.QEK_TIPONF <> 'B' AND "                      
	 cQuery    += "QEK.QEK_TIPONF <> 'D' AND "
	 cQuery    += If(!Empty(cFornece),"QEK.QEK_FORNEC = '"+cFornece+"' AND "," ")
	 cQuery    += "QEK.QEK_SITENT <> '1' AND "
	 cQuery    += "QEK.QEK_SITENT <> '7' AND " //somente 7.10

	 //Nao considera as Entradas Certificadas em Skip-Lote
	 If lNaoCer  
		 cQuery   += "QEK.QEK_VERIFI <> 2 AND "
	 EndIf	 
	 
	 cQuery    += "QEK.D_E_L_E_T_<> '*' AND " 
	 cQuery    += "QEL.QEL_FILIAL = '"+xFilial("QEL")+"' AND "
	 cQuery    += "QEL.QEL_FORNEC = QEK.QEK_FORNEC AND "
	 cQuery    += "QEL.QEL_LOJFOR = QEK.QEK_LOJFOR AND "
	 cQuery    += "QEL.QEL_PRODUT = QEK.QEK_PRODUT AND "
	 cQuery    += "QEL.QEL_DTENTR = QEK.QEK_DTENTR AND "
	 cQuery    += "QEL.QEL_LOTE = QEK.QEK_LOTE AND " 
	 cQuery    += "QEL.QEL_LABOR = '"+cLabor+"'AND "
	 cQuery    += "QEL.QEL_DTLAUD >= '"+Dtos(dInicio)+"' AND " 
	 cQuery    += "QEL.QEL_DTLAUD <= '"+Dtos(dFinal)+"' AND "
	 If lNFQEL
		 cQuery    += "QEL.QEL_NTFISC = QEK.QEK_NTFISC AND "
		 cQuery    += "QEL.QEL_SERINF = QEK.QEK_SERINF AND "
		 cQuery    += "QEL.QEL_ITEMNF = QEK.QEK_ITEMNF AND "
		 cQuery    += "QEL.QEL_TIPONF = QEK.QEK_TIPONF AND "
	 EndiF	
	 cQuery    += "QEL.D_E_L_E_T_ <> '*' AND "    
     cQuery    += "SA5.A5_FILIAL = '"+xFilial("SA5")+"' AND " 
	 cQuery    += "SA5.A5_FORNECE = QEK.QEK_FORNEC AND "
	 cQuery    += "SA5.A5_LOJA = QEK.QEK_LOJFOR AND "
	 cQuery    += "SA5.A5_PRODUTO = QEK.QEK_PRODUT AND "
	 cQuery    += "SA5.A5_FABREV <> 'P' AND "
	 cQuery    += "SA5.D_E_L_E_T_ <> '*' "
	 cQuery    += "ORDER BY "+SqlOrder(QEK->(IndexKey()))
	 cQuery    := ChangeQuery(cQuery)

	 dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQEK,.T.,.T.)
	 
	 TcSetField((cAliasQEK),"QEK_DTENTR","D")
	 TcSetField((cAliasQEK),"QEK_DIASAT","N",TamSX3("QEK_DIASAT")[1],TamSX3("QEK_DIASAT")[2])  
	 TcSetField((cAliasQEK),"QEK_VERIFI","N",TamSX3("QEK_VERIFI")[1],TamSX3("QEK_VERIFI")[2])
	 TcSetField((cAliasQEK),"QEL_DTENTR","D")
	 TcSetField((cAliasQEK),"QEL_DTLAUD","D")  

 Else
#ENDIF       

 	 //Filtra as Entradas no Periodo
	 cAliasQEK := 'QEK'
	 cIndexQEK := CriaTrab(NIL,.F.)
	 cChave    := IndexKey()
	 cQuery    := "QEK_FILIAL == '"+xFilial("QEK")+	"' .And. "
	 cQuery    += "QEK_TIPONF <> 'B' .And. "
	 cQuery    += "QEK_TIPONF <> 'D' .And. " 
	 cQuery    += If(!Empty(cFornece),"QEK_FORNEC == '"+cFornece+"' .And. "," ")
	 cQuery    += "QEK_SITENT <> '1' .And. "
	 cQuery    += "QEK_SITENT <> '7' .And. " //somente 7.10
	 cQuery    += "QEK_SITENT <> '8' " //somente 7.10
	 If lNaoCer //Nao considera as Entradas Certificadas em Skip-Lote
		 cQuery    += "QEK_VERIFI <> 2"
	 EndIf	 
		
	 IndRegua("QEK",cIndexQEK,cChave,,cQuery,OemToAnsi("Selecionando as Entradas no Periodo..."))
	 nIndexQEK := RetIndex("QEK") 
	 #IFNDEF TOP
	 	dbSetIndex(cIndexQEK+OrdBagExt())	
	 #ENDIF	
	 dbSetOrder(nIndexQEK+1)          
	 
     
#IFDEF TOP 
 EndIf
#ENDIF
                  
dbSelectArea(cAliasQEK)    
dbGoTop()      
ProcRegua(LastRec())

While (cAliasQEK)->(!Eof())

	//????????????????????????????????
	//?Verifica se o Produto x Fornecedor se refere a Permuta		 ?
	//????????????????????????????????  
	#IFDEF TOP
	 If TCSrvType() == "AS/400"          
	#ENDIF
		 SA5->(dbSetOrder(2))    
		 SA5->(MsSeek(xFilial("SA5")+(cAliasQEK)->QEK_PRODUT+(cAliasQEK)->QEK_FORNEC+(cAliasQEK)->QEK_LOJFOR))
		 If SA5->A5_FABREV == "P"
			 (cAliasQEK)->(dbSkip())
			 IncProc()
			 Loop
		 EndIf
	#IFDEF TOP	
	 EndIf	  
	#ENDIF 
	cFornAtu := (cAliasQEK)->QEK_FORNEC
	cProdAtu := (cAliasQEK)->QEK_PRODUT

	//????????????????????????????????
	//?Calculos dos Indices Mensais Informados                      ?
	//????????????????????????????????  
	aFatInf := {}                                                       
	lContinua := U_Q230DeME(cFornAtu,cProdAtu,cAno,cMes,@aFatInf)     
	If !(lContinua)
		(cAliasQEK)->(dbSkip())
		IncProc()
		Loop
	EndIf

	//????????????????????????????????
	//?Indices Mensais Calculados                                   ?
	//????????????????????????????????  
	nTotEnt	:= 0 //Numero Total de Entradas
	nEntDem	:= 0 //Quantidade de Entradas Demeritadas
	nQtdEnt	:= 0 //Quantidade Total Entregue (Tamanho do Lote)
	nNidi	:= 0 //Quantidade Entregue*Dias em Atraso
	nTotDem	:= 0 //Total de Demeritos das Entradas
	nQtdRej	:= 0 //Total de quantidae Rejeitada do Fornecedor/Item
	nLotIns	:= 0 //Total de Lotes Inspecionados
	nLotSkp	:= 0 //Total de Lotes em Skip-Lote
	nQtdIns	:= 0 //Quantidade Total Inspecionada (Tamanho do Lote) 
	nQtdSkp	:= 0 //Quantidade Total em Skip-Lote (Tamanho do Lote) 
	
	Aeval(aFatIQP,{|x|x[4]:=0}) //Zera a ocorrencia de cada Fator

	//????????????????????????????????
	//?Seleciona as Entradas do Fornecedor/Produto					 ?
	//????????????????????????????????  
	While (cAliasQEK)->(!Eof()) .And. (cAliasQEK)->QEK_FILIAL+(cAliasQEK)->QEK_FORNEC+(cAliasQEK)->QEK_PRODUT == (xFilial("QEK")+cFornAtu+cProdAtu)
	
    	cLaudo := '' //Laudo da Entrada Inspecionada
    	
		//????????????????????????????????
		//?Posiciona o Laudo da Entrada Inspecionada					 ?
		//????????????????????????????????  
		#IFDEF TOP
		 If TCSrvType() # "AS/400"          
			cLaudo  := (cAliasQEK)->QEL_LAUDO
			cQtdRej := (cAliasQEK)->QEL_QTREJ
			nQtdRej += SuperVal((cAliasQEK)->QEL_QTREJ) //Acumulado da Quantidade Rejeitada
		 Else
		#ENDIF                         
			If lNFQEL
				cNiseri := (cAliasQEK)->(QEK_NTFISC+QEK_SERINF+QEK_ITEMNF)
				dbSetOrder(3)          
				cSeek :=(cAliasQEK)->((cAliasQEK)->QEK_FORNEC+(cAliasQEK)->QEK_LOJFOR+(cAliasQEK)->QEK_PRODUT+(cAliasQEK)->QEK_NTFISC+(cAliasQEK)->QEK_SERINF+(cAliasQEK)->QEK_ITEMNF+(cAliasQEK)->QEK_TIPONF+dTos((cAliasQEK)->QEK_DTENTR)+(cAliasQEK)->QEK_LOTE)  
			Else
				dbSetOrder(1)          
				cSeek :=(cAliasQEK)->((cAliasQEK)->QEK_FORNEC+(cAliasQEK)->QEK_LOJFOR+(cAliasQEK)->QEK_PRODUT+dTos((cAliasQEK)->QEK_DTENTR)+(cAliasQEK)->QEK_LOTE)
			EndIf
			 If QEL->(!MsSeek(xFilial("QEL")+cSeek+cLabor))
			  	 (cAliasQEK)->(dbSkip())
				 IncProc()
				 Loop
			 Else
				 //Consiste a data do Laudo da Entrada Inspecionada
				 If (QEL->QEL_DTLAUD < dInicio) .Or. (QEL->QEL_DTLAUD > dFinal)
					 (cAliasQEK)->(dbSkip())
					 IncProc()
					 Loop
				 EndIf                  
				 cLaudo  := QEL->QEL_LAUDO
				 cQtdRej := QEL->QEL_QTREJ
				 nQtdRej += SuperVal(QEL->QEL_QTREJ) //Acumulado da Quantidade Rejeitada
			 EndIf
		#IFDEF TOP
		 EndIf
		#ENDIF	 
		
		lMensal := If(!lMensal,.T.,lMensal) //Flag para Geracao dos Indices Mensais

		//Nao considera as Transferencias
		If !(lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR")
			//Contabiliza o numero de Entradas Inspecionadas
			nTotEnt ++
		EndIf	

		//????????????????????????????????
		//?Identifica o Laudo da Entrada. Se o Laudo da Entrada houver  ?
		//?categoria Liberado Urgente, considera como Aprovado			 ?
		//????????????????????????????????  
		nI := Ascan(aFatIQP,{|x|x[1]==If(cLaudo==cFatLU,cFatApr,cLaudo)})

		//Identifica o Laudo Reprovado
		nY := Ascan(aFatIQP,{|x|x[1]==cFatRep})

		//Identifica o Laudo Aprovado
		nZ := Ascan(aFatIQP,{|x|x[1]==cFatApr})

		//IQP por Tabela Completa
		If lQtdRej // Cons. qtde. rejeitada
			
			//????????????????????????????????
			//?Acumula a Quantidade Rejeitada no Laudo Reprovado			 ?
			//?Acumula a diferenca do Tamanho do Lote e a quantidade rejei- ?
			//?tada no Laudo Entrada.									     ?
			//????????????????????????????????  
			If !Empty(cQtdRej)      
			
				//Subtrai as transferencias da quantidade aprovada					
				If (lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR") .And. nZ > 0
					aFatIQP[nZ,4] := aFatIQP[nZ,4]-SuperVal((cAliasQEK)->QEK_TAMLOT)
				EndIf
				
				//Calculo Normal                                                                          
				If nI > 0
					aFatIQP[nI,4] += (SuperVal((cAliasQEK)->QEK_TAMLOT)-SuperVal(cQtdRej))
				EndIf
				If nY > 0					
					aFatIQP[nY,4] += SuperVal(cQtdRej)
				EndIf					
			Else                                 
			
				//Nao considera as transferencias
				If !(lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR") .And. nI > 0
    				aFatIQP[nI,4] += SuperVal((cAliasQEK)->QEK_TAMLOT)
    			EndIf	
			EndIf
		Else
		        
			//Nao considera as transferencias
			If !(lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR") .And. nI > 0
				aFatIQP[nI,4] += SuperVal((cAliasQEK)->QEK_TAMLOT)
			EndIf	                         
		EndIf

		// Acumula Ocorrencias e Qtde. Lote - Inspec. e em Skip-Lote
		If (cAliasQEK)->QEK_VERIFI == 2	// Certificada
			//Nao considera as transferencias
			If !(lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR")
				nLotSkp ++
				nQtdSkp += SuperVal((cAliasQEK)->QEK_TAMLOT)
			EndIf	

		Else
			//Nao considera as transferencias
			If !(lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR")
				nLotIns ++
				nQtdIns += SuperVal((cAliasQEK)->QEK_TAMLOT) 
			EndIf				

		EndIf

		//Verifica se a Entrada e demeritada                                  
		If nI > 0
			If aFatIQP[nI,3] # "1"
				nEntDem ++
			EndIf
		EndIf

		//Nao considera as transferencias
		If !(lQtdRep .And. AllTrim((cAliasQEK)->QEK_TIPDOC) == "TR")
		
			//????????????????????????????????
			//?Acumula valores para o calculo do IPO. 						 ?
			//?Utiliza o Modulo do Dias em Atraso porque o mesmo pode ser   ?
			//?negativo.    												 ?
			//????????????????????????????????  
			nQtdEnt += SuperVal((cAliasQEK)->QEK_TAMLOT)                                   
			If (cAliasQEK)->QEK_DIASAT # 0
				nNiDi += (SuperVal((cAliasQEK)->QEK_TAMLOT)*;
					If(Abs((cAliasQEK)->QEK_DIASAT)>nDiaAtr,nDiaAtr,Abs((cAliasQEK)->QEK_DIASAT)))
			EndIf
		EndIf
		
        #IFDEF TOP
		 If TCSrvType() <> "AS/400"         
		 
		  	 //Filtra as Entradas no Periodo
			cAliasQER := "QRYQER"           
  			cQuery    := "SELECT SUM(QEE.QEE_PONTOS) QEE_PONTOS "
 		   	cQuery 	  += "FROM "+RetSqlName("QER")+" QER, "
		    cQuery 	  += RetSqlName("QEU")+" QEU, "                   
		    cQuery 	  += RetSqlName("QEE")+" QEE "
		    cQuery 	  += "WHERE "
		    cQuery 	  += "QER.QER_FILIAL = '"+xFilial("QER")+"' AND " 
		    cQuery 	  += "QER.QER_PRODUT = '"+(cAliasQEK)->QEK_PRODUT+"' AND " 
		    cQuery 	  += "QER.QER_REVI = '"+(cAliasQEK)->QEK_REVI+"' AND " 
		    cQuery 	  += "QER.QER_FORNEC = '"+(cAliasQEK)->QEK_FORNEC+"' AND " 
		    cQuery 	  += "QER.QER_LOJFOR = '"+(cAliasQEK)->QEK_LOJFOR+"' AND " 
		    cQuery 	  += "QER.QER_DTENTR = '"+Dtos((cAliasQEK)->QEK_DTENTR)+"' AND " 
		    cQuery 	  += "QER.QER_LOTE = '"+(cAliasQEK)->QEK_LOTE+"' AND " 			
            If lNFQEL
			    cQuery 	  += "QER.QER_NTFISC = '"+(cAliasQEK)->QEK_NTFISC+"' AND " 			
			    cQuery 	  += "QER.QER_SERINF = '"+(cAliasQEK)->QEK_SERINF+"' AND " 			
			    cQuery 	  += "QER.QER_ITEMNF = '"+(cAliasQEK)->QEK_ITEMNF+"' AND " 			
			    cQuery 	  += "QER.QER_TIPONF = '"+(cAliasQEK)->QEK_TIPONF+"' AND " 			
            EndIF
	    	cQuery 	  += "QER.D_E_L_E_T_ <> '*' AND "
		    cQuery    += "QEU.QEU_FILIAL = '"+xFilial("QEU")+"' AND " 
			cQuery    += "QEU.QEU_CODMED = QER.QER_CHAVE AND " 
			cQuery    += "QEU.QEU_DEMIQI = 'S' AND "
			cQuery    += "QEU.D_E_L_E_T_ <> '*' AND "              
		    cQuery    += "QEE.QEE_FILIAL = '"+xFilial("QEE")+"' AND " 
		    cQuery    += "QEE.QEE_CLASSE = QEU.QEU_CLASSE AND "
	    	cQuery    += "QEE.D_E_L_E_T_ <> '*' "                     
			cQuery    := ChangeQuery(cQuery)
		
		    dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQER,.T.,.T.)

			TcSetField(cAliasQER,"QEE_PONTOS","N",TamSX3("QEE_PONTOS")[1],TamSX3("QEE_PONTOS")[2])    
		    
		    nTotDem += QEE_PONTOS
			dbCloseArea()
			dbSelectArea("QER") 
		
         Else 
        #ENDIF
  			 //Acumula pontos de demeritos oriundos das NCs
			If lNFQEL
		 		cSeek := (cAliasQEK)->(QEK_PRODUT+QEK_REVI+QEK_FORNEC+QEK_LOJFOR+QEK_NTFISC+QEK_SERINF+QEK_ITEMNF+QEK_TIPONF+QEK_LOTE)
				cSeekQER   := "QER->(QER_FILIAL+QER_PRODUT+QER_REVI+QER_FORNEC+QER_LOJFOR+QER_NTFISC+QER_SERINF+QER_ITEMNF+QER_TIPONF+QER_LOTE)"
				nSetQER    := 5
			Else
			 	cSeek := (cAliasQEK)->(QEK_PRODUT+QEK_REVI+QEK_FORNEC+QEK_LOJFOR+Dtos(QEK_DTENTR)+QEK_LOTE)
				cSeekQER   := "QER->(QER_FILIAL+QER_PRODUT+QER_REVI+QER_FORNEC+QER_LOJFOR+Dtos(QER_DTENTR)+QER_LOTE)"
				nSetQER    := 1
			EndIf

			QER->(dbSetOrder(nSetQER))
			QER->(MsSeek(xFilial("QER")+cSeek))
			While QER->(!Eof()) .And. &cSeekQER==(xFilial("QER")+cSeek)
	
				 cChvMed := QER->QER_CHAVE //Chave de Ligacao
	
	    		 //Verifica as Nao-conformidades associadas
				 QEU->(dbSetOrder(1))
				 QEU->(MsSeek(xFilial("QEU")+cChvMed))
				 While QEU->(!Eof()) .And. (QEU->QEU_FILIAL+QEU->QEU_CODMED)==(xFilial("QEU")+cChvMed)
					 If QEU->QEU_DEMIQI == "S"      
						 // Acumula os pontos relativos ? classes das NCs
						 QEE->(dbSetOrder(1))
						 If QEE->(MsSeek(xFilial("QEE")+QEU->QEU_CLASSE))
							 nTotDem += QEE->QEE_PONTOS             
						 EndIf	
					 EndIf
					 QEU->(dbSkip())
				 EndDo
				 QER->(dbSkip())
			 EndDo 

  		#IFDEF TOP 
		 EndIf
		#ENDIF     

		(cAliasQEK)->(dbSkip())
		IncProc()
		
	EndDo
                                
    #IFDEF TOP         
 	 If TCSrvType() == "AS/400"         
    #ELSE 
	 	If nTotEnt == 0 
			Loop
		EndIf
    #ENDIF
    
    #IFDEF TOP         
 	 EndIf
    #ENDIF
    
	//????????????????????????????????
	//?Calculo do IQI Mensal                                        ?
	//????????????????????????????????  

	// Calculo do IQP pela Tabela Completa
	nSoma := 0
	nAux  := 0

	For nX := 1 To Len(aFatIQP)
		nAux  += (aFatIQP[nX,2] * aFatIQP[nX,4]) //Fator * Ocorr. Laudo
		nSoma += aFatIQP[nX,4]
	Next nX

	nIA := If(nSoma#0,(nAux/nSoma)*100,0)

	//????????????????????????????????
	//?Calculo do IQI por Tabela									 ?
	//?Obtem o Fator K, de acordo com o IA 						 ?
	//????????????????????????????????  
	QEJ->(dbSetOrder(1))
	QEJ->(MsSeek(xFilial("QEJ")+"1"+Str(nIA,6,2),.T.))
	
	nK   := SuperVal(QEJ->QEJ_FATOR)
	nIQP := (100-nK)-nTotDem
	nIQP := If(nIQP<0,0,nIQP)
	
	//????????????????????????????????
	//?Calculo do IQS                                               ?
	//????????????????????????????????  
	SA2->(dbSetOrder(1))
	SA2->(MsSeek(xFilial("SA2")+cFornAtu))
	If SA2->A2_FATAVA==0 .And. Empty(SA2->A2_DTAVA)
		nIQS := 999.99
	Else
		nIQS := SA2->A2_FATAVA
	EndIf

	//????????????????????????????????
	//?Calculo do IQI por Tabela									 ?
	//????????????????????????????????  
	QEJ->(dbSetOrder(1))
	If nIQS <> 999.99
		//Obtem o Fator FC, de acordo com o IQS
		QEJ->(MsSeek(xFilial("QEJ")+"2"+Str(nIQS,6,2),.T.))
		nFC := SuperVal(QEJ->QEJ_FATOR)

	Else
		//Obtem o Fator FC para quando nao tiver a nota do IQS (999.99)
		If QEJ->(MsSeek(xFilial("QEJ")+"2"+Str(nIQS,6,2)))
			nFC := SuperVal(QEJ->QEJ_FATOR)
		Else
			//IQP por tabela Completa, assume 1
			nFC := 1
		EndIf
		
	EndIf
	nIQI := (nIQP*nFC)

	//????????????????????????????????
	//?Calculo do IPR Mensal                                        ?
	//????????????????????????????????  
	If nFatIPR > 0
		nIPR := 0//_CalcIPR(cFornAtu,cProdAtu,cAno,cMes)	
	Else
		nIPR := 0
	EndIf

	//????????????????????????????????
	//?Calculo do IES Mensal 										 ?
	//????????????????????????????????  

	//Calcula o IPO
	nIPO := If(nQtdEnt # 0,(1-(nNiDi/(nDiaAtr*nQtdEnt)))*100,0)
	nITR := 0
	nIES := nIPO

	//????????????????????????????????
	//?Calculo do IQF Mensal 										 ?
	//????????????????????????????????  
	nIQF := (nFatIQI*nIQI) + (nFatIPR*nIPR) + (nFatIES*nIES)

	For nI := 1 to Len(aFatInf)
		nIQF := nIQF + aFatInf[nI]
	Next nI

	//????????????????????????????????
	//?Gravacao dos indices mensais calculados                      ?
	//????????????????????????????????  
	QEW->(dbSetOrder(1))
	For nX := 1 to Len(aFatIQP)
		If aFatIQP[nX,4] <> 0
			If QEW->(!MsSeek(xFilial("QEW")+cFornAtu+cProdAtu+cAno+cMes+aFatIQP[nX,1]))
				RecLock("QEW",.T.)
				QEW->QEW_FILIAL := xFilial("QEW")
				QEW->QEW_ANO    := cAno
				QEW->QEW_MES    := cMes
				QEW->QEW_FORNEC := cFornAtu
				QEW->QEW_PRODUT := cProdAtu
				QEW->QEW_LAUDO  := aFatIQP[nX,1]
			Else
				RecLock("QEW",.F.)
			EndIf
			QEW->QEW_QTDLAU	:= Round(aFatIQP[nX,4],QEA230Dec("QEW_QTDLAU", 0))
			MsUnLock()
		EndIf
	Next nX

	//????????????????????????????????
	//?Atualiza os Indices Mensais (QEV)							 ?
	//????????????????????????????????  
	aDados := {nTotEnt, nEntDem, nLotIns, nLotSkp, nQtdIns, nQtdSkp, nQtdRej, nIQP,;
		nTotDem, nIQS, nIQI, nIPO, nITR, nIES, nIPR, nIQF, 999.99, 999.99, 999.99, ;
		999.99, 999.99, dDataBase}

	U_Q230GrvInd(cAno,cMes,cFornAtu,cProdAtu,aDados)

	nRecnoQEV := QEV->(Recno())

	//????????????????????????????????
	//?calculo do IQF Acumulado									 ?
	//????????????????????????????????  

	// Vetor que guarda a qtde nos n meses de cada Fator Laudo
	aFatAcum := Array(Len(aFatIQP),nMesAcu+1)
	For nI := 1 to len(aFatIQP)
		aFatAcum[nI,1] := aFatIQP[nI,1]
		For nX := 1 to nMesAcu
			aFatAcum[nI,nX+1] := 0
		Next nX
	Next nI

	//????????????????????????????????
	//?Acumula a soma dos respectivos (n) meses					 ?
	//????????????????????????????????  
	aLotEnt := Afill(Array(nMesAcu),0) //Lotes Entregues
	aLotDem := Afill(Array(nMesAcu),0) //Lotes Demeritados
	aIQD    := Afill(Array(nMesAcu),0)	//IQDs
	aIPO    := Afill(Array(nMesAcu),0) 	//IPOs

	// Seleciona os indices dos meses a serem cons. p/ o acumulado
	dbSelectArea("QEV")
	dbSetOrder(2)
	
	#IFDEF TOP                    
	 If TCSrvType() <> "AS/400"          
		 cAliasQEV := "QRYQEV"           
		 aStruQEV  := QEV->(dbStruct())
			
 		 //Verifica se o Produto x Fornecedor possui Entradas no Mes/Ano
		 cQuery := "SELECT " 
		 cQuery += "QEV.QEV_FILIAL QEV_FILIAL, "
		 cQuery += "QEV.QEV_FORNEC QEV_FORNEC, "
		 cQuery += "QEV.QEV_PRODUT QEV_PRODUT, "
		 cQuery += "QEV.QEV_ANO    QEV_ANO   , "
		 cQuery += "QEV.QEV_MES    QEV_MES   , "
		 cQuery += "QEV.QEV_LOTENT QEV_LOTENT, "
		 cQuery += "QEV.QEV_LOTDEM QEV_LOTDEM, "
		 cQuery += "QEV.QEV_IQD    QEV_IQD   , "
		 cQuery += "QEV.QEV_IPO    QEV_IPO "  
		 
		 cQuery += "FROM "+RetSqlName("QEV")+" QEV "                 
	     cQuery += "WHERE QEV.QEV_FILIAL = '"+xFilial("QEV")+"' AND "                    
		 cQuery += "QEV.QEV_FORNEC = '"+cFornAtu+"' AND "
		 cQuery += "QEV.QEV_PRODUT = '"+cProdAtu+"' AND "
		 cQuery += "QEV.QEV_LOTENT <> 0 AND "
 		 If Upper(TcGetDb()) $ "ORACLE,POSTGRES,DB2,INFORMIX"
		 	 cQuery += "(QEV_ANO || QEV_MES) >= '"+(cAnoIni+cMesIni)+"' AND "
			 cQuery += "(QEV_ANO || QEV_MES) <= '"+(cAnoFim+cMesFim)+"' AND "
		 Else
			 cQuery += "(QEV_ANO+QEV_MES) >= '"+(cAnoIni+cMesIni)+"' AND "
			 cQuery += "(QEV_ANO+QEV_MES) <= '"+(cAnoFim+cMesFim)+"' AND "
		 EndIf
		 cQuery += "QEV.D_E_L_E_T_ <> '*' "                     
		 cQuery += "ORDER BY "+SqlOrder(QEV->(IndexKey(2)))
		 
		 cQuery := ChangeQuery(cQuery)
		 dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQEV,.T.,.T.)

		 TcSetField(cAliasQEV,"QEV_LOTENT","N",TamSX3("QEV_LOTENT")[1],TamSX3("QEV_LOTENT")[2]) 
		 TcSetField(cAliasQEV,"QEV_LOTDEM","N",TamSX3("QEV_LOTDEM")[1],TamSX3("QEV_LOTDEM")[2]) 
		 TcSetField(cAliasQEV,"QEV_IQD"	  ,"N",TamSX3("QEV_IQD")[1]   ,TamSX3("QEV_IQD")[2]   ) 
		 TcSetField(cAliasQEV,"QEV_IPO"	  ,"N",TamSX3("QEV_IPO")[1]   ,TamSX3("QEV_IPO")[2]   ) 
		     
		 cCondicao := ' .T.'		     
		 dbSelectArea(cAliasQEV)
		 dbGoTop()

     Else
    #ENDIF
    	cAliasQEV := "QEV"           
       	cCondicao := "QEV_FILIAL == '"+xFilial('QEV')+"' .And. QEV_FORNEC == '"+cFornAtu+"' .And. " 
       	cCondicao += "QEV_PRODUT == '"+cProdAtu+"' .And. (QEV_ANO+QEV_MES) >= '"+(cAnoIni+cMesIni)+"' .And. "	
       	cCondicao += "(QEV_ANO+QEV_MES) <= '"+(cAnoFim+cMesFim)+"'"
	    MsSeek(xFilial("QEV")+cFornAtu+cProdAtu+cAnoIni+cMesIni,.T.)
	#IFDEF TOP
	 EndIf
	#ENDIF    

	While !Eof() .And. &cCondicao

		nI := Ascan(aAnoMes,{|x|x[1]+x[2]==(cAliasQEV)->QEV_ANO+(cAliasQEV)->QEV_MES})

		//Acumula as quantidades por Laudo
		For nX := 1 to Len(aFatAcum)
			QEW->(dbSetOrder(1))
			If QEW->(MsSeek(xFilial("QEW")+(cAliasQEV)->QEV_FORNEC+(cAliasQEV)->QEV_PRODUT+(cAliasQEV)->QEV_ANO+(cAliasQEV)->QEV_MES+aFatAcum[nX,1]))
				aFatAcum[nX,nI+1] += QEW->QEW_QTDLAU
			EndIf
		Next nX

		//Acumula Lotes entregues, demeritados, IQDs e IPOs
		aLotEnt[nI] += (cAliasQEV)->QEV_LOTENT
		aLotDem[nI] += (cAliasQEV)->QEV_LOTDEM
		aIQD[nI] 	+= If((cAliasQEV)->QEV_IQD<>999.99,(cAliasQEV)->QEV_IQD,0)
		aIPO[nI] 	+= If((cAliasQEV)->QEV_IPO<>999.99,(cAliasQEV)->QEV_IPO,0)
		dbSkip()
		
	EndDo
           
	#IFDEF TOP                    
	 If TCSrvType() <> "AS/400"          
		 dbSelectArea(cAliasQEV)
		 dbCloseArea()
		 dbSelectArea("QEV")   
     EndIf
    #ENDIF  	
	//

	//Verifica a possibilidade de geracao do acumulado
	nCtMes  := 0
	nTotEnt := 0
	For nX := 1 to nMesAcu
		If aLotEnt[nX] # 0
			nCtMes ++
			nTotEnt += aLotEnt[nX]
		EndIf
	Next nX

	//Criterio Flexivel
	lAcumula := If(nTotEnt>0,.T.,.F.)

	//Realiza o calculo do Acumulado
	nIQPa   := 999.99
	nIQIa   := 999.99
	nIPOa   := 999.99
	nIQFa   := 999.99
	nTotDem := 999.99
	
	If lAcumula   
		Q230CalAcu(cFornAtu, cProdAtu, nMesAcu, aAnoMes, aLotEnt, aFatIQP, aFatAcum, aIQD,;
			aIPO, nFatIQI, nFatIPR, nFatIES, @nIQPa, @nIQIa, @nIPOa, @nIQFa, @nTotDem)		
	
	EndIf

	//????????????????????????????????
	//?Atualiza os Indices acumulados que foram gerados.			 ?
	//????????????????????????????????  
	dbSelectArea("QEV")	 
	dbSetorder(1)
	dbGoto(nRecnoQEV)
	
	RecLock("QEV",.F.)
	QEV->QEV_IQPA := nIQPa
	QEV->QEV_IQDA := nTotDem	
	QEV->QEV_IQIA := nIQIa
	QEV->QEV_IPOA := nIPOa
	QEV->QEV_IQFA := nIQFa
	MsUnLock()
	dbSelectArea(cAliasQEK)    

EndDo         

//????????????????????????????????
//?Calcula o IQF Acumulado para Produtos x Fornecedorews que nao?
//?possuem Entradas no Mes/Ano Selecionado.					 ?
//????????????????????????????????  
If lContinua

	//Filtra as Amarracoes Produto x Fornecedores
	#IFDEF TOP

	 If TCSrvType() <> "AS/400"         
		 dbSelectArea('SA5')     
		 dbSetorder(1) 
		 cAliasSA5 := "QRYSA5"           
		 aStruSA5  := SA5->(dbStruct())
		 cQuery    := "SELECT "
	 	 cQuery    += "SA5.A5_FILIAL  A5_FILIAL , "
	 	 cQuery    += "SA5.A5_FORNECE A5_FORNECE, "
	 	 cQuery    += "SA5.A5_LOJA    A5_LOJA   , "
	 	 cQuery    += "SA5.A5_PRODUTO A5_PRODUTO, "
	 	 cQuery    += "SA5.A5_FABREV  A5_FABREV , "
	 	 
		 cQuery    += "QEV.QEV_FILIAL QEV_FILIAL, "
		 cQuery    += "QEV.QEV_FORNEC QEV_FORNEC, "
		 cQuery    += "QEV.QEV_PRODUT QEV_PRODUT, "
		 cQuery    += "QEV.QEV_ANO    QEV_ANO   , "
		 cQuery    += "QEV.QEV_MES    QEV_MES   , "
		 cQuery    += "QEV.QEV_LOTENT QEV_LOTENT, "
		 cQuery    += "QEV.QEV_LOTDEM QEV_LOTDEM, "
		 cQuery    += "QEV.QEV_IQD    QEV_IQD   , "
		 cQuery    += "QEV.QEV_IPO    QEV_IPO " 
		  
		 cQuery    += "FROM "+RetSqlName("SA5")+" SA5, "                 
		 cQuery    += RetSqlName("QEV")+" QEV "                 
	     cQuery    += "WHERE SA5.A5_FILIAL = '"+xFilial("SA5")+"' AND "                    
	     cQuery    += If(!Empty(cFornece),"SA5.A5_FORNECE = '"+cFornece+"' AND "," ")
	     cQuery    += "SA5.A5_FABREV <> 'P' AND "
		 cQuery    += "SA5.D_E_L_E_T_ <> '*' AND "                                        
		 cQuery    += "QEV.QEV_FILIAL = '"+xFilial("QEV")+"' AND "
		 cQuery    += "QEV.QEV_FORNEC = SA5.A5_FORNECE AND "
		 cQuery    += "QEV.QEV_PRODUT = SA5.A5_PRODUTO AND "
		 cQuery    += "QEV.QEV_ANO = '"+cAno+"' AND "
		 cQuery    += "QEV.QEV_MES = '"+cMes+"' AND "
 		 cQuery    += "QEV.QEV_LOTENT = 0 AND "
 		 cQuery    += "QEV.D_E_L_E_T_ <> '*' "
		 cQuery    += "ORDER BY "+SqlOrder(SA5->(IndexKey()))

		 dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSA5,.T.,.T.)

   		 TcSetField(cAliasSA5,"QEV_LOTENT","N",TamSX3("QEV_LOTENT")[1],TamSX3("QEV_LOTENT")[2]) 
		 TcSetField(cAliasSA5,"QEV_LOTDEM","N",TamSX3("QEV_LOTDEM")[1],TamSX3("QEV_LOTDEM")[2]) 
		 TcSetField(cAliasSA5,"QEV_IQD"   ,"N",TamSX3("QEV_IQD")[1]   ,TamSX3("QEV_IQD")[2]   ) 
		 TcSetField(cAliasSA5,"QEV_IPO"	  ,"N",TamSX3("QEV_IPO")[1]   ,TamSX3("QEV_IPO")[2]   ) 
	      
     Else
	#ENDIF
		 dbSelectArea('SA5')     
		 dbSetorder(1) 
		 cAliasSA5 := "SA5"           
		 cChave    := IndexKey()
		 cIndexSA5 := CriaTrab(NIL,.F.)
	     cQuery    := "A5_FILIAL == '"+xFilial("SA5")+"' .And. "                    
	     cQuery    += If(!Empty(cFornece),"A5_FORNECE == '"+cFornece+"' .And. "," ")
	     cQuery    += "A5_FABREV <> 'P'"
	
		 IndRegua("SA5",cIndexSA5,cChave,,cQuery,OemToAnsi("Selecionando as Amarracoes Produtos x Fornecedores no Periodo..."))
		 nIndexSA5 := RetIndex("SA5") 
		 #IFNDEF TOP
		 	dbSetIndex(cIndexSA5+OrdBagExt())	
		 #ENDIF	
		 dbSetOrder(nIndexSA5+1)          
	#IFDEF TOP
	 EndIf	
	#ENDIF     

	dbSelectArea(cAliasSA5)
	#IFDEF TOP
	 If TCSrvType() == "AS/400"          
	#ENDIF
	 	dbSetOrder(nIndexSA5+1)          
	#IFDEF TOP
	 EndIf	
	#ENDIF 
	dbGoTop()
	While (cAliasSA5)->(!Eof())
        
	    //Armazena o Produto x Fornecedor atual
		cFornAtu := (cAliasSA5)->A5_FORNECE
		cProdAtu := (cAliasSA5)->A5_PRODUTO

		//????????????????????????????????
		//?Verifica se o Produto x Fornecedor possui Entradas no Mes/Ano?
		//????????????????????????????????  
		#IFDEF TOP
		 If TCSrvType() == "AS/400"          
		#ENDIF
			 QEV->(dbSetOrder(2))
			 If QEV->(MsSeek(xFilial("QEV")+cFornAtu+cProdAtu+cAno+cMes))
				 If QEV->QEV_LOTENT <> 0
					 (cAliasSA5)->(dbSkip())
					 Loop
				 EndIf
			 EndIf
		#IFDEF TOP
		 EndIf	
		#ENDIF 

		//????????????????????????????????
		//?Calculos dos Indices Mensais Informados                      ?
		//????????????????????????????????  
		aFatInf := {}
		U_Q230DeME(cFornAtu,cProdAtu,cAno,cMes,@aFatInf,.F.)

		//????????????????????????????????
		//?Indices Mensais Calculados                              	 ?
		//????????????????????????????????  

		//Armazena n Meses para cada Fator(Laudo) 
		aFatAcum := Array(Len(aFatIQP),nMesAcu+1)
		For nI := 1 to Len(aFatIQP)
			aFatAcum[nI,1] := aFatIQP[nI,1]
			For nX := 1 to nMesAcu
				aFatAcum[nI,nX+1] := 0
			Next nX
		Next nI

		aLotEnt := Afill(Array(nMesAcu),0) //Lotes Entregues
		aLotDem := Afill(Array(nMesAcu),0) //Lotes Demeritados
		aIQD    := Afill(Array(nMesAcu),0)	//IQDs
		aIPO    := Afill(Array(nMesAcu),0)	//IPOs
                      
	    //Verifica se existe pelo menos 1 Entrada nos ultimos n meses
	    dbSelectArea("QEV")
	    dbSetOrder(2)
		#IFDEF TOP                    
		 If TCSrvType() <> "AS/400"          
			 cAliasQEV := "QRYQEV"           
			 aStruQEV  := QEV->(dbStruct())
			
	 		 //Verifica se o Produto x Fornecedor possui Entradas no Mes/Ano
	 		 cQuery := "SELECT " 
			 cQuery += "QEV.QEV_FILIAL QEV_FILIAL, "
			 cQuery += "QEV.QEV_FORNEC QEV_FORNEC, "
			 cQuery += "QEV.QEV_PRODUT QEV_PRODUT, "
			 cQuery += "QEV.QEV_ANO    QEV_ANO   , "
			 cQuery += "QEV.QEV_MES    QEV_MES   , "
			 cQuery += "QEV.QEV_LOTENT QEV_LOTENT, "
			 cQuery += "QEV.QEV_LOTDEM QEV_LOTDEM, "
			 cQuery += "QEV.QEV_IQD    QEV_IQD   , "
			 cQuery += "QEV.QEV_IPO    QEV_IPO "  
			 
			 cQuery += "FROM "+RetSqlName("QEV")+" QEV "                 
		     cQuery += "WHERE QEV.QEV_FILIAL = '"+xFilial("QEV")+"' AND "                    
			 cQuery += "QEV.QEV_FORNEC = '"+cFornAtu+"' AND "
			 cQuery += "QEV.QEV_PRODUT = '"+cProdAtu+"' AND "
			 cQuery += "QEV.QEV_LOTENT <> 0 AND "
	 		 If Upper(TcGetDb()) $ "ORACLE,POSTGRES,DB2,INFORMIX"
			 	 cQuery += "(QEV_ANO || QEV_MES) >= '"+(cAnoIni+cMesIni)+"' AND "
				 cQuery += "(QEV_ANO || QEV_MES) <= '"+(cAnoFim+cMesFim)+"' AND "
			 Else
				 cQuery += "(QEV_ANO+QEV_MES) >= '"+(cAnoIni+cMesIni)+"' AND "
				 cQuery += "(QEV_ANO+QEV_MES) <= '"+(cAnoFim+cMesFim)+"' AND "
			 EndIf
			 cQuery += "QEV.D_E_L_E_T_ <> '*' "                     
			 cQuery += "ORDER BY "+SqlOrder(QEV->(IndexKey(2)))

			 cQuery := ChangeQuery(cQuery)
	
			 dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasQEV,.T.,.T.)

			 TcSetField(cAliasQEV,"QEV_LOTENT","N",TamSX3("QEV_LOTENT")[1],TamSX3("QEV_LOTENT")[2]) 
			 TcSetField(cAliasQEV,"QEV_LOTDEM","N",TamSX3("QEV_LOTDEM")[1],TamSX3("QEV_LOTDEM")[2]) 
			 TcSetField(cAliasQEV,"QEV_IQD"   ,"N",TamSX3("QEV_IQD")[1]   ,TamSX3("QEV_IQD")[2]   ) 
			 TcSetField(cAliasQEV,"QEV_IPO"	  ,"N",TamSX3("QEV_IPO")[1]   ,TamSX3("QEV_IPO")[2]   ) 

 			 cCondicao := ' .T.'		     
 			 dbSelectArea(cAliasQEV)
 			 dbGoTop()

	     Else
        #ENDIF
  			cAliasQEV := "QEV"           
        	cCondicao := "QEV_FILIAL == '"+xFilial("QEV")+"' .And. QEV_FORNEC == '"+cFornAtu+"' .And. "          
			cCondicao += "QEV_PRODUT == '"+cProdAtu+"' .And. (QEV_ANO+QEV_MES) >= '"+(cAnoIni+cMesIni)+"' .And. "	
			cCondicao += "(QEV_ANO+QEV_MES) <= '"+(cAnoFim+cMesFim)+"'"
		    MsSeek(xFilial("QEV")+cFornAtu+cProdAtu+cAnoIni+cMesIni,.T.)
		#IFDEF TOP
		 EndIf
		#ENDIF    
		While !Eof() .And. &cCondicao

			nI := Ascan(aAnoMes,{|x|x[1]+x[2]==(cAliasQEV)->QEV_ANO+(cAliasQEV)->QEV_MES})
                
			//Acumula as quantidades para cada Laudo
			QEW->(dbSetOrder(1))
			For nX := 1 to Len(aFatAcum)                                 
				If QEW->(MsSeek(xFilial("QEW")+(cAliasQEV)->QEV_FORNEC+(cAliasQEV)->QEV_PRODUT+(cAliasQEV)->QEV_ANO+(cAliasQEV)->QEV_MES+aFatAcum[nX,1]))
					aFatAcum[nX,nI+1] += QEW->QEW_QTDLAU 
				EndIf
			Next nX

			aLotEnt[nI] += (cAliasQEV)->QEV_LOTENT //Lotes entregues
			aLotDem[nI] += (cAliasQEV)->QEV_LOTDEM //Lotes demeritados
			aIQD[nI]    += If((cAliasQEV)->QEV_IQD<>999.99,(cAliasQEV)->QEV_IQD,0) //IQDs
			aIPO[nI]    += (cAliasQEV)->QEV_IPO //IPOs
			dbSkip()                 
		EndDo         
		#IFDEF TOP                    
		 If TCSrvType() <> "AS/400"          
			dbSelectArea(cAliasQEV)
			dbCloseArea()
			dbSelectArea("QEV")   
         EndIf
        #ENDIF  	
		//

		// Verifica se nos ult. n meses houve algum mes com Entrada
		nCtMes := 0
		For nX := 1 to nMesAcu
			If aLotEnt[nX] # 0
				nCtMes ++
			EndIf
		Next nX

		If nCtMes == 0
			(cAliasSA5)->(dbSkip())
			Loop
		EndIf
	
		//Verifica a possibilidade para Geracao do Acumulado
		nCtMes  := 0
		nTotEnt := 0
		
		For nX := 1 to nMesAcu
			If aLotEnt[nX] # 0
				nCtMes ++
				nTotEnt += aLotEnt[nX]
			EndIf
		Next nX

		//Criterio Flexivel
		lAcumula := If(nTotEnt>0,.T.,.F.)

		// Define o IQS do Fornecedor
		SA2->(dbSetOrder(1))
		SA2->(MsSeek(xFilial("SA2")+cFornAtu))
		If SA2->A2_FATAVA == 0 .And. Empty(SA2->A2_DTAVA)
			nIQS := 999.99
		Else
			nIQS := SA2->A2_FATAVA
		EndIf

		//Realiza o calculo do Acumulado
		nIQPa   := 999.99
		nIQIa   := 999.99
		nIPOa   := 999.99
		nIQFa   := 999.99
		nTotDem := 999.99
		
		If lAcumula     
	  		Q230CalAcu(cFornAtu,cProdAtu,nMesAcu,aAnoMes,aLotEnt,aFatIQP,aFatAcum,;
	  			aIQD,aIPO,nFatIQI,nFatIPR,nFatIES,@nIQPa,@nIQIa,@nIPOa,@nIQFa,@nTotDem)		

		EndIf

		lAcumulado := If(!lAcumulado,.T.,lAcumulado) //Flag para geracao dos Indices Acumulados

		//????????????????????????????????
		//?Atualiza os Indices Mensais Acumulados para Fornecdor x Pro- ?
		//?duto sem Entradas no Mes/Ano (QEV),nao grava o QEW, pois nao ?
		//?ha Acumulados.												 ?
		//????????????????????????????????  
		aDados := {0, 0, 0, 0, 0, 0, 0, 999.99, 999.99, nIQS, 999.99, 999.99, 999.99,;
			999.99, 999.99, 999.99, nIQPa, nTotDem, nIQIa, nIPOa, nIQFa, dDataBase}
                          
		U_Q230GrvInd(cAno,cMes,cFornAtu,cProdAtu,aDados)

		dbSelectArea(cAliasSA5)
		dbSkip()
		
	EndDo             
	
EndIf

//????????????????????????????????
//?Exibe o aviso se os Indices Mensais/Acumulados foram gerados ?
//????????????????????????????????  
If !lMensal
	If !lAcumulado
		MsgAlert("Nao ha dados para a geracao Ind. Qual. neste mes/ano","Atencao") //"Nao h? dados para a geracao Ind. Qual. neste mes/ano"###"Atencao"
	Else
		MsgAlert("Somente foram gerados os Indices acumulados, para produtos sem Entrada no mes/ano","Atencao") //"Somente foram gerados os Indices acumulados, para produtos sem Entrada no mes/ano"###"Atencao"
	EndIf
EndIf

//????????????????????????????????
//?Restaura a area original no Cadastro de Indices				 ?
//????????????????????????????????  
dbSelectArea(cAliasQEK)
If lQuery 
 	dbCloseArea() 
Else                
	RetIndex("QEK")
	Set Filter To
	fErase(cIndexQEK+OrdBagExt())
EndIf
dbSelectArea("QEK")
                                 
dbSelectArea(cAliasSA5)
If lQuery 
 	dbCloseArea() 
Else                
	RetIndex("SA5") 
	Set Filter To
	fErase(cIndexSA5+OrdBagExt())
EndIf
dbSelectArea("SA5")

RestArea(aAreaAnt)

Return(NIL) 

Static Function _CalcIPR(cFornAtu,cProdAtu,cAno,cMes)   
Local _aArea  := GetArea()
Local _nRet   := 1
Local _nTotIt := 0
Local _nProbl := 0
cQuery := " SELECT * FROM "+RetSqlName("SD1")+" SD1, " +RetSqlName("SC7")+" SC7, " +RetSqlName("SF1")+" SF1 "                
cQuery += " WHERE D1_FILIAL = '"+xFilial("SD1")+"' "                    
cQuery += " AND D1_FORNECE = '"+cFornAtu+"' "
cQuery += " AND D1_COD = '"+cProdAtu+"' "
cQuery += " AND SUBSTRING(D1_DTDIGIT,1,6) = '"+cAno+cMes+"'
cQuery += " AND D1_PEDIDO <> '' "                    
cQuery += " AND SD1.D_E_L_E_T_ <> '*' " 
cQuery += " AND SC7.D_E_L_E_T_ <> '*' " 
cQuery += " AND C7_FILIAL = '"+xFilial("SC7")+"' " 			                     
cQuery += " AND D1_PEDIDO = C7_NUM "
cQuery += " AND D1_ITEMPC = C7_ITEM "
cQuery += " AND D1_COD = C7_PRODUTO "
cQuery += " AND D1_FILIAL = F1_FILIAL "
cQuery += " AND D1_DOC = F1_DOC "
cQuery += " AND D1_SERIE = F1_SERIE "
cQuery += " AND D1_FORNECE = D1_FORNECE "
cQuery += " AND D1_LOJA = F1_LOJA " 
cQuery += " AND SF1.D_E_L_E_T_ <> '*' " 
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"_SD1",.T.,.T.)    
dbSelectArea("_SD1")
_SD1->(dbGoTop())
Do While !_SD1->(EOF()) 
	_nTotIt += 1
	_nDifPrc := ((_SD1->C7_PRECO - _SD1->D1_VUNIT) / _SD1->C7_PRECO)*100
	_nDifQtd := ((_SD1->C7_QUANT - _SD1->D1_QUANT) / _SD1->C7_QUANT)*100
	If Abs(_nDifPrc)>= 10 .OR. Abs(_nDifQtd)>= 10 .OR. _SD1->F1_COND <> _SD1->C7_COND
		_nProbl	 += 1
	EndIf
	_SD1->(DbSkip())
EndDo
_nRet := iif(_nProbl>0 .And. _nTotIt>0, _nProbl / _nTotIt, 1)  * 100
_SD1->(DbCloseArea())  
DbSelectArea("QE0")
DbSetOrder(1)
DbSeek(xFilial("QE0")+cAno+cMes+cFornAtu+cProdAtu+"IPR")
If Found()
	RecLock("QE0",.F.)
Else
	RecLock("QE0",.T.)
	QE0->QE0_FILIAL  := xFilial("QE0")
	QE0->QE0_ANO     := cAno
	QE0->QE0_MES     := cMes
	QE0->QE0_FORNEC  := cFornAtu
	QE0->QE0_PRODUT  := cProdAtu
	QE0->QE0_INDICE  := "IPR"	
EndIf
QE0->QE0_VALOR := _nRet
MsUnLock()
RestArea(_aArea)
Return(_nRet)

Static Function Q230CalAcu(cFornece,cProduto,nMesAcu,aAnoMes,aLotEnt,aFatIQP,aFatAcum,aIQD,aIPO,nFatIQI,nFatIPR,nFatIES,nIQPa,nIQIa,nIPOa,nIQFa,nTotDem)		
Local aLauAc  := {}
Local nI      := 0
Local nX      := 0
Local nAux    := 0      
Local nIA     := 0
Local nK      := 0
Local nPos    := 0
Local nSoma   := 0          
Local nDiv    := 0
Local nFC     := 0            
Local aFatInf := {}
Local nIQS    := 0                  
Local nIPRa   := 0                                              
Local nIESa   := 0

aLauAc := {}
For nI := 1 to Len(aFatAcum)
	nSoma := 0
	For nX := 1 to nMesAcu
		nSoma += aFatAcum[nI,nX+1]
	Next nX
	Aadd(aLauAc,{aFatAcum[nI,1],nSoma})
Next nI

// Acumula os demeritos
nTotDem := 0
For nI := 1 to nMesAcu
	nTotDem += aIQD[nI]
Next nI

//????????????????????????????????
//? Calculo do IQI Acumulado                                    ?
//????????????????????????????????  

// Calculo do IQPa por Tabela Completa
nSoma := 0
nAux  := 0
For nX := 1 to Len(aLauAc)
	nAux  += (aFatIQP[nX,2]*aLauAc[nX,2]) //Fator * Ocorrencia Acumulada do Laudo
	nSoma += aLauAc[nX,2]
Next nX
nIA := If(nSoma#0,(nAux/nSoma)*100,0)

//????????????????????????????????
//?Calculo do IQIa por Tabela									 ?
//?Obtem o Fator K, de acordo com o IA							 ?
//????????????????????????????????  
QEJ->(dbSetOrder(1))
QEJ->(MsSeek(xFilial("QEJ")+"1"+Str(nIA,6,2),.T.))

nK    := SuperVal(QEJ->QEJ_FATOR)
nIQPa := (100-nK)-nTotDem
nIQPa := If(nIQPa<0,0,nIQPa)

// Calculo do IQS
SA2->(dbSetOrder(1))
SA2->(MsSeek(xFilial("SA2")+cFornece))
If SA2->A2_FATAVA == 0 .And. Empty(SA2->A2_DTAVA)
	nIQS := 999.99
Else
	nIQS := SA2->A2_FATAVA
EndIf

//????????????????????????????????
//? Calculo do IQIa por Tabela									 ?
//????????????????????????????????  
QEJ->(dbSetOrder(1))
If nIQS <> 999.99
	// Obtem o Fator FC, de acordo com o IQS
	QEJ->(MsSeek(xFilial("QEJ")+"2"+Str(nIQS,6,2),.T.))
	nFC := SuperVal(QEJ->QEJ_FATOR)
Else
	// Obtem o Fator FC para quando nao tiver a nota do IQS (0)
	If QEJ->(MsSeek(xFilial("QEJ")+"2"+Str(nIQS,6,2)))
		nFC := SuperVal(QEJ->QEJ_FATOR)
	Else
		// IQP por Tabela Completa, assume 1
		nFC := 1
	EndIf
EndIf
nIQIa := (nIQPa*nFC)

//????????????????????????????????
//?Calculo do IPR Acumulado                                     ?
//????????????????????????????????  
nIPRa := 0

//????????????????????????????????
//?Calculo do IES Acumulado                                     ?
//????????????????????????????????  

// Calcula o IPOa: Media dos IPOs dos n meses
nSoma := 0
nDiv  := 0
nIPOa := 0

For nX := 1 to nMesAcu
	If aLotEnt[nX] # 0
		nSoma += aIPO[nX]
		nDiv ++
	EndIf
Next nX               

If nDiv # 0
	nIPOa := (nSoma/nDiv)
EndIf

nIESa := nIPOa

//????????????????????????????????
//?Calculos dos Acumulados para os Indices Informados: media    ?
//????????????????????????????????  
aFatInf := {}
QF1->(dbSetOrder(1))
QF1->(MsSeek(xFilial("QF1")))
While QF1->(!Eof()) .And. QF1->QF1_FILIAL == xFilial("QF1")
                        
	//Indice informado mensalmente
	If QF1->QF1_CALC == "I"	
		QE0->(dbSetOrder(1))
		For nI := 1 to Len(aAnoMes)
			If	QE0->(MsSeek(xFilial("QE0")+aAnoMes[nI,1]+aAnoMes[nI,2]+cFornece+cProduto+QF1->QF1_INDICE))
				nPos := Ascan(aFatInf,{|x|x[1]==QF1->QF1_INDICE})
				If nPos == 0
					//Armazena o Indice, Somatoria de Valores Mensais, Meses, Fator Indice no calculo IQF
					Aadd(aFatInf,{QF1->QF1_INDICE,QE0->QE0_VALOR,1,QF1->QF1_FATIQF})
				Else
					aFatInf[nPos,2] += QE0->QE0_VALOR
					aFatInf[nPos,3] ++
				EndIf
			EndIf
		Next nI
	EndIf
	QF1->(dbSkip())

EndDo

//????????????????????????????????
//?Calculo do IQF Acumulado                                     ?
//????????????????????????????????  

//Indices calculados
nIQFa := (nFatIQI*nIQIa) + (nFatIPR*nIPRa) + (nFatIES*nIESa)

//Indices informados: Media dos valores mensais
For nI := 1 to Len(aFatInf)
	nIQFa += ((aFatInf[nI,2]/aFatInf[nI,3])*aFatInf[nI,4])
Next nI

Return(NIL)

User Function Q230IdeIQF(cIndInf,lConsiste,nFator)
Local lRetorno := .T.
Local aAreaAnt := GetArea()

QF1->(dbSetOrder(1))
If !(QF1->(MsSeek(xFilial("QF1")+cIndInf)))
	If lConsiste
		MsgAlert("Indice nao cadastrado: "+cIndInf,"Atencao") //"Indice nao cadastrado: "###"Atencao" 
		lRetorno := .F.	
	EndIf
Else
	nFator := QF1->QF1_FATIQF
EndIf     
RestArea(aAreaAnt)

Return(lRetorno)


User Function Q230DefIQP(cFatApr,cFatRep,cFatLU)
Local aAreaAnt := GetArea()
Local aFatIQP  := {}        
             
dbSelectArea("QED")
dbSetorder(1)
MsSeek(xFilial("QED"))
While !Eof() .And. QED_FILIAL == xFilial("QED")
	If QED_CATEG == "4"	//Liberacao Urgente
		cFatLU := QED_CODFAT
	Else 
		If QED_CATEG == "1"	//Aprovado sem Restricoes
			cFatApr := QED->QED_CODFAT
		ElseIf QED_CATEG == "3" //Reprovado Totalmente
			cFatRep := QED->QED_CODFAT
		EndIf
		Aadd(aFatIQP,{QED_CODFAT,SuperVal(QED_FATOR),QED_CATEG,0})
	EndIf
	dbSkip()
EndDo
RestArea(aAreaAnt)

Return(aFatIQP)

User Function Q230DeME(cFornece,cProduto,cAno,cMes,aFatInf,lMessage)
Local lRetorno := .T.
Local aAreaAnt := GetArea()
Default lMessage := .T.
                
//????????????????????????????????
//?Calculos dos Indices Mensais Informados                      ?
//????????????????????????????????  
QF1->(dbSetOrder(1))
QF1->(MsSeek(xFilial("QF1")))
While QF1->(!Eof()) .And. QF1->QF1_FILIAL == xFilial("QF1") .And. lRetorno

    //Verifica se o Indice foi informado mensalmente 
	If QF1->QF1_CALC=="I" .And. QF1->QF1_FATIQF>0
		If Alltrim(QF1->QF1_INDICE) == "IPR"	
			_CalcIPR(cFornece,cProduto,cAno,cMes)	
		EndIf
		QE0->(dbSetOrder(1))
		If QE0->(!MsSeek(xFilial("QE0")+cAno+cMes+cFornece+cProduto+QF1->QF1_INDICE))
		 	If lMessage
				MsgAlert("Indice Mensal nao informado para o Produto/Fornecedor: "+Alltrim(cProduto)+"/"+Alltrim(cFornece)+" ("+QF1->QF1_INDICE +")","Atencao")	//"Indice Mensal nao informado para o Produto/Fornecedor: " ### "Atencao"	 
				lRetorno := .F.
			EndIf	
		Else
			//Armazena o calculo do Indice Mensal*Fator do IQF
			Aadd(aFatInf,QF1->QF1_FATIQF*QE0->QE0_VALOR) 
		EndIf
	EndIf
	QF1->(dbSkip())
EndDo

RestArea(aAreaAnt)

Return(lRetorno)

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?230GrvInd?Autor ?Paulo Emidio de Barros?data ?4/02/2003??
???????????????????????????????????????
??escri??o ?Define os Indices Mensais para calculo 					  ??
???????????????????????????????????????
??intaxe	 ?Q230GrvInd(cAno,cMes,cFornece,cProduto,aDados)			  ??  
???????????????????????????????????????
??arametros?EXPC1 = Ano para Geracao dos Indices						  ??
??		 ?EXPC2 = Mes para Geracao dos Indices						  ??
??		 ?EXPC3 = Codigo do Fornecedor                  			  ??
??		 ?EXPC2 = Codigo do Produto   								  ??
??		 ?EXPA1 = Vetor contendo os dados dos Indices				  ??
???????????????????????????????????????
??etorno   ?NIL														  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
User Function Q230GrvInd(cAno,cMes,cFornece,cProduto,aDados)
Local aAreaAnt := GetArea()

//Atualiza os Indices Mensais
dbSelectArea('QEV')
dbSetOrder(1)
If !MsSeek(xFilial("QEV")+cAno+cMes+cFornece+cProduto)
	RecLock("QEV",.T.)
	QEV->QEV_FILIAL := xFilial("QEV")
	QEV->QEV_ANO    := cAno
	QEV->QEV_MES    := cMes
	QEV->QEV_FORNEC := cFornece
	QEV->QEV_PRODUT	:= cProduto
Else
	RecLock("QEV",.F.)
EndIf
QEV->QEV_LOTENT	:= aDados[1] 
QEV->QEV_LOTDEM	:= aDados[2]
QEV->QEV_LOTINS	:= aDados[3]
QEV->QEV_LOTSKP	:= aDados[4]
QEV->QEV_QTDINS	:= Round(aDados[5],QEA230Dec("QEV_QTDINS", 0))
QEV->QEV_QTDSKP	:= Round(aDados[6],QEA230Dec("QEV_QTDSKP", 0))
QEV->QEV_QTDREJ	:= Round(aDados[7],QEA230Dec("QEV_QTDREJ", 0))
QEV->QEV_IQP	:= aDados[8]
QEV->QEV_IQD	:= aDados[9]
QEV->QEV_IQS	:= aDados[10]
QEV->QEV_IQI	:= aDados[11]
QEV->QEV_IPO	:= aDados[12]
QEV->QEV_ITR	:= aDados[13]
QEV->QEV_IES	:= aDados[14]
QEV->QEV_IPR	:= aDados[15]
QEV->QEV_IQF	:= aDados[16]
QEV->QEV_IQPA	:= aDados[17]
QEV->QEV_IQDA	:= aDados[18]
QEV->QEV_IQIA	:= aDados[19]
QEV->QEV_IPOA	:= aDados[20]
QEV->QEV_IQFA	:= aDados[21]
QEV->QEV_DTGER	:= aDados[22]
MsUnLock()

RestArea(aAreaAnt)

Return(NIL)

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?230DIQF	?Autor ?Paulo Emidio de Barros?Data ?4/02/2003??
???????????????????????????????????????
??escri??o ?Exclui os Indices mensais								  ??
???????????????????????????????????????
??intaxe	 ?Q230DIQF(EXPC1,EXPN1,EXPN2,EXPA1,EXPL1,EXPC2,EXPC3)		  ??  
???????????????????????????????????????
??arametros?EXPC1 = Alias Atual										  ??
??		 ?EXPN1 = Numero do Registro Corrente						  ??
??		 ?EXPN2 = Opcao do aRotina									  ??
??		 ?EXPA1 = Campos a serem editados							  ??
??		 ?EXPL1 = Indica se todos os Indices serao excluidos         ??
??		 ?EXPC2 = Ano para exclusao do Historico   				  ??
??		 ?EXPC3 = Mes para exclusao do Historico   				  ??
???????????????????????????????????????
??etorno   ?NIL														  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
User Function Q230DIQF(cAlias,nReg,nOpc,aCampos,lDelAll,cDelAno,cDelMes,cDelFor)
Local lExecDel 
Local cPerg     := "QEA230" 
Local lPerg     := .F.
Local aAreaAnt  := GetArea()
Local cAno      := ''
Local cMes      := ''
Local cFornece  := ''
Local cProduto  := ''          
Local cCondicao := ''                                
Local nMv_Par01 := 0
#IFDEF TOP
Local cQuery    := ''
#EndIF
//????????????????????????????????
//?lExecDel - Parametro que define se ira utilizar TcSqlExec()  ?
//?para exclusao dos Lancamentos otimizando a rotina.			 ?
//?O Objetivo do parametro e auxiliar as empresas que fazem re- ?
//?gistros das inclusoes/alteracoes/exclusoes em Logs de Transa ?
//?cao para efeitos de auditoria e rastreabilidade.             ?
//????????????????????????????????  
lExecDel := If(GetMv("MV_QTOPDEL")=="1",.T.,.F.) 

//????????????????????????????????
//?Indica se todos os indices serao excluidos devido a alteracao?
//?do dia de Fechamento Mensal.								 ?
//????????????????????????????????  
lDelAll := If(lDelAll==NIL,.F.,lDelAll)

//????????????????????????????????
//?Exclui o ano selecionado mantendo o Historico de 5 anos Acu- ?
//?mulados. 													 ?
//????????????????????????????????  
cDelAno := If(cDelAno==NIL," ",cDelAno)
cDelMes := If(cDelMes==NIL," ",cDelMes)
cDelFor := If(cDelFor==NIL," ",cDelFor)

If !lDelAll
	//????????????????????????????????
	//?mv_par01 = 1) Todos Fornecedores 							 ?
	//?		   2) Um Fornecedor									 ?
	//????????????????????????????????
	lPerg := Pergunte(cPerg,.T.)
	If !lPerg
		Return(NIL)
	EndIf	
	
	cAno     := QEV->QEV_ANO
	cMes     := QEV->QEV_MES
	cFornece := QEV->QEV_FORNEC 
	cProduto := QEV->QEV_PRODUT  
	nMv_Par01:= Alltrim(Str(Mv_Par01))	
	
	If ExistBlock("QIEGERIN")
		ExecBlock("QIEGERIN", .F., .F.,{cAno, cMes, cFornece, cProduto, nMv_Par01})
	EndIf	

EndIf

dbSelectArea("QEW")
dbSetOrder(2)
#IFDEF TOP
 If lExecDel
	 cQuery := ""               
	 cQuery += "DELETE FROM "+RetSqlName('QEW')+" "  
	 cQuery += "WHERE QEW_FILIAL = '"+xFilial("QEW")+If(lDelAll,"'","' AND ") 
	 
	 If !Empty(cDelAno) //Exclui o ano selecionado mantendo o historico de 5 anos
		cQuery += " AND QEW_ANO = '"+cDelAno+"'"	 
	 EndIf

	 If !Empty(cDelMes) //Exclui o Mes selecionado 
		cQuery += " AND QEW_MES = '"+cDelMes+"'"	 
	 EndIf

	 If !Empty(cDelFor) //Exclui o Fornecedor selecionado 
		cQuery += " AND QEW_FORNEC = '"+cDelFor+"'"	 
	 EndIf
	 
	 If !lDelAll	 
		 If mv_par01 == 2 //somente o Fornecedor+Produto selecionado
			 cQuery += "QEW_FORNEC = '"+cFornece+"' AND "  	 
			 cQuery += "QEW_PRODUT = '"+cProduto+"' AND "
		 EndIf	 
		 cQuery += "QEW_ANO = '"+cAno+ "' AND "
		 cQuery += "QEW_MES = '"+cMes+"'"
	 EndIf
	 TcSqlExec(cQuery)
	 
	 //Exclui o Fornecedor x Produto no Ano+Mes
	 dbSelectArea("QEV")
	 If lDelAll //Exclui todos os Indices caso o dia de fechamento seja alterado
		 cQuery := ""
		 cQuery += "DELETE FROM "+RetSqlName("QEV")+" "
		 cQuery += "WHERE QEV_FILIAL = '"+xFilial("QEV")+"'"
		 
	 	 If !Empty(cDelAno) //Exclui o ano selecionado mantendo o historico de 5 anos
			cQuery += " AND QEV_ANO = '"+cDelAno+"'"	 
		 EndIf

	 	 If !Empty(cDelMes) //Exclui o mes selecionado
			cQuery += " AND QEV_MES = '"+cDelMes+"'"	 
		 EndIf

	 	 If !Empty(cDelFor) //Exclui o mes selecionado
			cQuery += " AND QEV_FORNEC = '"+cDelFor+"'"	 
		 EndIf

		 TcSqlExec(cQuery)
	 Else

		IF ExistBlock( "QIEDEQEV" )
        	ExecBlock( "QIEDEQEV", .f., .f.)
		Endif                
		
		 If mv_par01 == 2
			 RecLock("QEV",.F.,.T.)
			 dbDelete()
			 MsUnLock()
		 Else
			 cQuery := ""
			 cQuery += "DELETE FROM "+RetSqlName("QEV")+" "
			 cQuery += "WHERE QEV_FILIAL = '"+xFilial("QEV")+"' AND "
			 cQuery += "QEV_ANO = '"+cAno+"' AND "
			 cQuery += "QEV_MES = '"+cMes+"'"
			 TcSqlExec(cQuery)
		 EndIf		 
	 EndIf
 Else	 
#ENDIF
	 If lDelAll //Exclui todos os Indices caso o dia de fechamento seja alterado
	 	 cSeek     := xFilial("QEW")
	 	 cCondicao := "QEW_FILIAL == '"+xFilial("QEW")+"' "      
	 	 
 	 	 If !Empty(cDelAno) //Exclui o ano selecionado mantendo o historico de 5 anos
			cSeek     += cDelAno
			cCondicao += " .And. QEW_ANO == '"+cDelAno+"' "
		 EndIf

 	 	 If !Empty(cDelMes) //Exclui o Mes selecionado 
			cSeek     += cDelMes
			cCondicao += " .And. QEW_MES == '"+cDelMes+"' "
		 EndIf

 	 	 If !Empty(cDelFor) //Exclui o Mes selecionado 
			cSeek     += cDelFor
			cCondicao += " .And. QEW_FORNEC == '"+cDelFor+"' "
		 EndIf

	 Else
		 If mv_par01 == 2
		  	 cSeek := xFilial("QEW")+cAno+cMes+cFornece+cProduto
		  	 cCondicao := "QEW_FILIAL == '"+xFilial("QEW")+"' .And. "
			 cCondicao += "QEW_FORNEC == '"+cFornece+"' .And. "
			 cCondicao += "QEW_PRODUT == '"+cProduto+"' .And. "
			 cCondicao += "QEW_ANO == '"+cAno+"' .And. "
			 cCondicao += "QEW_MES == '"+cMes+ "' "
		 Else
		 	 cSeek  := xFilial("QEW")+cAno+cMes
		 	 cCondicao := "QEW_FILIAL == '"+xFilial("QEW")+"' .And. "
		 	 cCondicao += "QEW_ANO == '"+cAno+"' .And. "
 		 	 cCondicao += "QEW_MES == '"+cMes+"' "
		 EndIf
     EndIf
     	
	 MsSeek(cSeek)
	 While !Eof() .And. &cCondicao
		 RecLock("QEW",.F.,.T.)
		 dbDelete()
		 MsUnLock()
		 dbSkip()
	 EndDo
	
	 dbSelectArea("QEV")
	 If lDelAll //Exclui todos os Indices caso o dia de fechamento seja alterado
         
 	 	 cSeek     := xFilial("QEV")
	 	 cCondicao := "QEV_FILIAL == '"+xFilial("QEV")+"' "
	 	 
 	 	 If !Empty(cDelAno) //Exclui o ano selecionado mantendo o historico de 5 anos
			cSeek     += cDelAno
			cCondicao += ".And. QEV_ANO == '"+cDelAno+"' "
		 EndIf

 	 	 If !Empty(cDelMes) //Exclui o Mes selecionado
			cSeek     += cDelMes
			cCondicao += ".And. QEV_MES == '"+cDelMes+"' "
		 EndIf

 	 	 If !Empty(cDelFor) //Exclui o Mes selecionado
			cSeek     += cDelFor
			cCondicao += ".And. QEV_FORNEC == '"+cDelFor+"' "
		 EndIf

	 	 dbSetOrder(1)
		 MsSeek(cSeek)

 		 IF ExistBlock( "QIEDELQEV" )
         	ExecBlock( "QIEDELQEV", .f., .f.)
		 Endif		 
		 While !Eof() .And. &cCondicao
		  	 RecLock("QEV",.F.,.T.)
			 dbDelete()
			 MsUnLock()
			 dbSkip()  
		 EndDo
	 Else

		 IF ExistBlock( "QIEDELQEV" )
          	ExecBlock( "QIEDELQEV", .f., .f.)
		 Endif	 	
		 If mv_par01 == 2         
		 	 RecLock("QEV",.F.,.T.)
			 dbDelete()
			 MsUnLock()
		 Else
		 	 dbSetOrder(1)
			 MsSeek(xFilial("QEV")+cAno+cMes)
			 While (QEV_FILIAL+QEV_ANO+QEV_MES) == (xFilial("QEV")+cAno+cMes) .And. !Eof()
			  	 RecLock("QEV",.F.,.T.)
				 dbDelete()
				 MsUnLock()
				 dbSkip()  
			 EndDo
		 EndIf	 	 
	 EndIf
	 
#IFDEF TOP
 EndIf
#ENDIF

RestArea(aAreaAnt)

Return(NIL)

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?230RetData?Autor ?aulo Emidio de Barros?Data ?4/02/2003??
???????????????????????????????????????
??escri??o ?Exclui os Indices mensais								  ??
???????????????????????????????????????
??intaxe	 ?Q230RetData(EXPC1,EXPC2,EXPC3)							  ??  
???????????????????????????????????????
??arametros?EXPC1 = Dia												  ??
??		 ?EXPC2 = Mes												  ??
??		 ?EXPC3 = Ano									  			  ??
???????????????????????????????????????
??etorno   ?EXPA1[1] = Data Inicio									  ??
??		 ?EXPA1[2] = Data Final									  ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
Static Function Q230RetData(cDia,cMes,cAno)
Local lBissexto := .F.                
Local nX        := 0
Local nY		:= 0
Local nW		:= 0

//????????????????????????????????
//?Define o periodo a ser considerado para a geracao IQF mensal ?
//????????????????????????????????  
If cMes == '02' .And. Val(cDia) >= 28
	dInicio   := Ctod('01/'+cMes+'/'+cAno,"DDMMYY")
	lBissexto := Int(Year(dInicio)/4)==(Year(dInicio)/4)
EndIf

If (cDia=='30' .Or. cDia=='31') 
	dInicio := Ctod('01/'+cMes+'/'+cAno,"DDMMYY")
	dFinal  := LastDay(dInicio)
Else  
	If cMes == '02' .And. (!lBissexto .And. Val(cDia) >= 28) 	.Or. (lBissexto .And. Val(cDia) >= 29) 
		dFinal  := LastDay(Ctod('01/'+cMes+'/'+cAno,'DDMMYY'))
		dInicio := LastDay(Ctod('01/'+cMes+'/'+cAno,"DDMMYY"))
	Else
		dFinal  := Ctod(cDia+'/'+cMes+'/'+cAno,'DDMMYY')
		dInicio := Ctod(cDia+'/'+cMes+'/'+cAno,"DDMMYY")
	EndIf	
	
	dInicio := FirstDay(dInicio)-1
	If !(Month(dInicio) == 2  .And. (cDia == '28' .Or. cDia == '29')) 
	    nX := Val(cDia)
		nY := Day(LastDay(dInicio))
		nW := nX - nY 
		dInicio := dInicio + nW
	EndIf		          
	
	If (Month(dInicio) == 2  .And. lBissexto)
		dInicio := dInicio - 2
	Else
		dInicio := dInicio + 1
	EndIf	
	
EndIf
Return({dInicio,dFinal})

/*
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
??un??o	 ?EA230Dec  ?Autor ?icero Odilio Cruz    ?Data ?5/10/2006??
???????????????????????????????????????
??escri??o ?Recupera o numero de decimais de um Campo 			      ??
???????????????????????????????????????
??Uso		 ?QIEA230													  ??
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
*/
Static Function QEA230Dec(cCampo, nDefault)
Local nDecimais := 0
Local nOldSx3 := Sx3->(recno())
Local nOldOrd := Sx3->(indexord())

DbSelectArea("SX3")
DbSetOrder(2)

If DbSeek(cCampo)
	nDecimais := X3_DECIMAL
Else
	nDecimais := nDefault
EndIf      

DbSetOrder(nOldOrd)
DbGoTo(nOldSx3)

Return nDecimais